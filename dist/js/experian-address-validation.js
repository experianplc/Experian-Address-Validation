!function(){"use strict";var e,s,t=function(){function e(){this.collection={}}return e.prototype.on=function(e,s){this.collection[e]=this.collection[e]||[],this.collection[e].push(s)},e.prototype.trigger=function(e,s){if(this.collection[e])for(var t=0;t<this.collection[e].length;t++){for(var o=[s],a=2;a<arguments.length;a++)o.push(arguments[a]);try{this.collection[e][t].apply(this.collection,o)}catch(e){}}},e}(),o=t,a=function(){function e(e){this.instance=e}return e.prototype.send=function(e,s,t,o,a){var d=this;void 0===a&&(a=[]),this.currentRequest=new XMLHttpRequest,this.currentRequest.open(s,e,!0),this.currentRequest.timeout=5e3,this.currentRequest.setRequestHeader("auth-token",this.instance.options.token),this.currentRequest.setRequestHeader("Content-Type","application/json"),this.currentRequest.setRequestHeader("Accept","application/json"),a.forEach((function(e){return d.currentRequest.setRequestHeader(e.key,e.value)})),this.currentRequest.onload=function(e){if(d.currentRequest.status>=200&&d.currentRequest.status<400){var s=JSON.parse(d.currentRequest.responseText);t(s)}else d.instance.searchSpinner.hide(),d.instance.events.trigger("request-error",e),d.instance.events.trigger("request-error-".concat(d.currentRequest.status),e)},this.currentRequest.onerror=function(e){d.instance.searchSpinner.hide(),d.instance.events.trigger("request-error",e)},this.currentRequest.ontimeout=function(e){d.instance.searchSpinner.hide(),d.instance.events.trigger("request-timeout",e)},this.currentRequest.send(o)},e}();!function(e){e.COMBINED="combined",e.AUTOCOMPLETE="autocomplete",e.VALIDATE="validate",e.SINGLELINE="singleline",e.TYPEDOWN="typedown",e.LOOKUPV2="lookupv2"}(e||(e={})),function(e){e[e.SEARCH=1]="SEARCH",e[e.WHAT3WORDS=2]="WHAT3WORDS",e[e.UDPRN=3]="UDPRN",e[e.LOCALITY=4]="LOCALITY",e[e.POSTAL_CODE=5]="POSTAL_CODE",e[e.MPAN=6]="MPAN",e[e.MPRN=7]="MPRN"}(s||(s={}));var d,i={WHAT3WORDS:{key:"what3words",display:"What3Words",dataset:[["gb-address"],["gb-additional-multipleresidence"],["gb-additional-notyetbuilt"],["gb-additional-notyetbuilt","gb-additional-multipleresidence"]]},UDPRN:{key:"udprn",display:"UDPRN",dataset:[["gb-address"],["gb-additional-multipleresidence"],["gb-additional-notyetbuilt"],["gb-additional-notyetbuilt","gb-additional-multipleresidence"]]},MPAN:{key:"mpan",display:"MPAN",dataset:[["gb-additional-electricity"],["gb-additional-electricity","gb-additional-gas"]]},MPRN:{key:"mprn",display:"MPRN",dataset:[["gb-additional-gas"],["gb-additional-electricity","gb-additional-gas"]]},POSTAL_CODE:{key:"postal_code",display:"Postal code",dataset:[]},LOCALITY:{key:"locality",display:"Locality",dataset:[]}},r={TRUE:{key:"true",display:"True"},FALSE:{key:"false",display:"False"}},n={LATIN:{key:"latin",display:"Latin"},KANA:{key:"kana",display:"Kana"},KANJI:{key:"kanji",display:"Kanji"}};!function(e){e.NO_MATCHES="No matches",e.VERIFIED_MATCH="Verified match",e.INTERACTION_REQUIRED="Interaction required",e.PREMISES_PARTIAL="Premises partial",e.STREET_PARTIAL="Street partial",e.MULTIPLE_MATCHES="Multiple matches"}(d||(d={}));var l={avMode:s.SEARCH,searchType:e.COMBINED,input:{placeholderText:"Start typing an address...",applyFocus:!1},formattedAddressContainer:{showHeading:!1,headingType:"h3",validatedHeadingText:"Validated address",manualHeadingText:"Manual address entered"},searchAgain:{visible:!0,text:"Search again"},useAddressEnteredText:"<em> - Use address entered or try again...</em>",useSpinner:!1,language:"en",addressLineLabels:["address_line_1","address_line_2","address_line_3","locality","region","postal_code","country"]},c=[{country:"Afghanistan",iso3Code:"AFG",iso2Code:"AF",datasetCodes:["af-address-ed"],searchTypes:["singleline","validate"]},{country:"Afghanistan",iso3Code:"AFG",iso2Code:"AF",datasetCodes:["af-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Albania",iso3Code:"ALB",iso2Code:"AL",datasetCodes:["al-address-ed"],searchTypes:["singleline","validate"]},{country:"Albania",iso3Code:"ALB",iso2Code:"AL",datasetCodes:["al-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Algeria",iso3Code:"DZA",iso2Code:"DZ",datasetCodes:["dz-address-ed"],searchTypes:["singleline","validate"]},{country:"Algeria",iso3Code:"DZA",iso2Code:"DZ",datasetCodes:["dz-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"American Samoa",iso3Code:"ASM",iso2Code:"AS",datasetCodes:["as-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Andorra",iso3Code:"AND",iso2Code:"AD",datasetCodes:["ad-address-ed"],searchTypes:["singleline","validate"]},{country:"Andorra",iso3Code:"AND",iso2Code:"AD",datasetCodes:["ad-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Angola",iso3Code:"AGO",iso2Code:"AO",datasetCodes:["ao-address-ed"],searchTypes:["singleline","validate"]},{country:"Angola",iso3Code:"AGO",iso2Code:"AO",datasetCodes:["ao-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Anguilla",iso3Code:"AIA",iso2Code:"AI",datasetCodes:["ai-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Antarctica",iso3Code:"ATA",iso2Code:"AQ",datasetCodes:["aq-address-ed"],searchTypes:["singleline","validate"]},{country:"Antigua and Barbuda",iso3Code:"ATG",iso2Code:"AG",datasetCodes:["ag-address-ed"],searchTypes:["singleline","validate"]},{country:"Antigua and Barbuda",iso3Code:"ATG",iso2Code:"AG",datasetCodes:["ag-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Argentina",iso3Code:"ARG",iso2Code:"AR",datasetCodes:["ar-address-ed"],searchTypes:["singleline","validate"]},{country:"Argentina",iso3Code:"ARG",iso2Code:"AR",datasetCodes:["ar-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Armenia",iso3Code:"ARM",iso2Code:"AM",datasetCodes:["am-address-ed"],searchTypes:["singleline","validate"]},{country:"Armenia",iso3Code:"ARM",iso2Code:"AM",datasetCodes:["am-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Aruba",iso3Code:"ABW",iso2Code:"AW",datasetCodes:["aw-address-ed"],searchTypes:["singleline","validate"]},{country:"Aruba",iso3Code:"ABW",iso2Code:"AW",datasetCodes:["aw-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Australia DataFusion",iso3Code:"AUS",iso2Code:"AU",datasetCodes:["au-address-datafusion"],searchTypes:["autocomplete","singleline","typedown","lookupv2"]},{country:"Australia Geocoded National Address",iso3Code:"AUS",iso2Code:"AU",datasetCodes:["au-address-gnaf"],searchTypes:["autocomplete","singleline","typedown","validate","lookupv2"]},{country:"Australia Postal Address",iso3Code:"AUS",iso2Code:"AU",datasetCodes:["au-address"],searchTypes:["autocomplete","singleline","typedown","validate","lookupv2"]},{country:"Austria",iso3Code:"AUT",iso2Code:"AT",datasetCodes:["at-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Austria",iso3Code:"AUT",iso2Code:"AT",datasetCodes:["az-address-ed"],searchTypes:["singleline","validate"]},{country:"Azerbaijan",iso3Code:"AZE",iso2Code:"AZ",datasetCodes:["az-address-ed"],searchTypes:["singleline","validate"]},{country:"Azerbaijan",iso3Code:"AZE",iso2Code:"AZ",datasetCodes:["az-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Bahamas",iso3Code:"BHS",iso2Code:"BS",datasetCodes:["bs-address-ed"],searchTypes:["singleline","validate"]},{country:"Bahamas",iso3Code:"BHS",iso2Code:"BS",datasetCodes:["bs-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Bahrain",iso3Code:"BHR",iso2Code:"BH",datasetCodes:["bh-address-ed"],searchTypes:["singleline","validate"]},{country:"Bahrain",iso3Code:"BHR",iso2Code:"BH",datasetCodes:["bh-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Bangladesh",iso3Code:"BGD",iso2Code:"BD",datasetCodes:["bd-address-ed"],searchTypes:["singleline","validate"]},{country:"Bangladesh",iso3Code:"BGD",iso2Code:"BD",datasetCodes:["bd-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Barbados",iso3Code:"BRB",iso2Code:"BB",datasetCodes:["bb-address-ed"],searchTypes:["singleline","validate"]},{country:"Barbados",iso3Code:"BRB",iso2Code:"BB",datasetCodes:["bb-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Belarus",iso3Code:"BLR",iso2Code:"BY",datasetCodes:["by-address-ed"],searchTypes:["singleline","validate"]},{country:"Belarus",iso3Code:"BLR",iso2Code:"BY",datasetCodes:["by-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Belgium",iso3Code:"BEL",iso2Code:"BE",datasetCodes:["be-address"],searchTypes:["singleline","typedown"]},{country:"Belgium",iso3Code:"BEL",iso2Code:"BE",datasetCodes:["be-address-ed"],searchTypes:[" validate"]},{country:"Belgium",iso3Code:"BEL",iso2Code:"BE",datasetCodes:["be-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Belize",iso3Code:"BLZ",iso2Code:"BZ",datasetCodes:["bz-address-ed"],searchTypes:["singleline","validate"]},{country:"Belize",iso3Code:"BLZ",iso2Code:"BZ",datasetCodes:["bz-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Benin",iso3Code:"BEN",iso2Code:"BJ",datasetCodes:["bj-address-ed"],searchTypes:["singleline","validate"]},{country:"Benin",iso3Code:"BEN",iso2Code:"BJ",datasetCodes:["bj-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Bermuda",iso3Code:"BMU",iso2Code:"BM",datasetCodes:["bm-address-ed"],searchTypes:["singleline","validate"]},{country:"Bermuda",iso3Code:"BMU",iso2Code:"BM",datasetCodes:["bm-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Bhutan",iso3Code:"BTN",iso2Code:"BT",datasetCodes:["bt-address-ed"],searchTypes:["singleline","validate"]},{country:"Bhutan",iso3Code:"BTN",iso2Code:"BT",datasetCodes:["bt-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Bolivia",iso3Code:"BOL",iso2Code:"BO",datasetCodes:["bo-address-ed"],searchTypes:["singleline","validate"]},{country:"Bolivia",iso3Code:"BOL",iso2Code:"BO",datasetCodes:["bo-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Bonaire, Sint Eustatius and Saba",iso3Code:"BES",iso2Code:"BQ",datasetCodes:["bq-address-ed"],searchTypes:["singleline","validate"]},{country:"Bonaire, Sint Eustatius and Saba",iso3Code:"BES",iso2Code:"BQ",datasetCodes:["bq-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Bosnia and Herzegovina",iso3Code:"BIH",iso2Code:"BA",datasetCodes:["ba-address-ed"],searchTypes:["singleline","validate"]},{country:"Bosnia and Herzegovina",iso3Code:"BIH",iso2Code:"BA",datasetCodes:["ba-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Botswana",iso3Code:"BWA",iso2Code:"BW",datasetCodes:["bw-address-ed"],searchTypes:["singleline","validate"]},{country:"Botswana",iso3Code:"BWA",iso2Code:"BW",datasetCodes:["bw-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Brazil",iso3Code:"BRA",iso2Code:"BR",datasetCodes:["br-address-ed"],searchTypes:["singleline","validate"]},{country:"Brazil",iso3Code:"BRA",iso2Code:"BR",datasetCodes:["br-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Brunei Darussalam",iso3Code:"BRN",iso2Code:"BN",datasetCodes:["bn-address-ed"],searchTypes:["singleline","validate"]},{country:"Brunei Darussalam",iso3Code:"BRN",iso2Code:"BN",datasetCodes:["bn-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Bulgaria",iso3Code:"BGR",iso2Code:"BG",datasetCodes:["bg-address-ed"],searchTypes:["singleline","validate"]},{country:"Bulgaria",iso3Code:"BGR",iso2Code:"BG",datasetCodes:["bg-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Burkina Faso",iso3Code:"BFA",iso2Code:"BF",datasetCodes:["bf-address-ed"],searchTypes:["singleline","validate"]},{country:"Burkina Faso",iso3Code:"BFA",iso2Code:"BF",datasetCodes:["bf-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Burundi",iso3Code:"BDI",iso2Code:"BI",datasetCodes:["bi-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Cambodia",iso3Code:"KHM",iso2Code:"KH",datasetCodes:["kh-address-ed"],searchTypes:["singleline","validate"]},{country:"Cambodia",iso3Code:"KHM",iso2Code:"KH",datasetCodes:["kh-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Cameroon",iso3Code:"CMR",iso2Code:"CM",datasetCodes:["cm-address-ed"],searchTypes:["singleline","validate"]},{country:"Cameroon",iso3Code:"CMR",iso2Code:"CM",datasetCodes:["cm-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Canada",iso3Code:"CAN",iso2Code:"CA",datasetCodes:["ca-address"],searchTypes:["autocomplete","singleline","typedown","validate","lookupv2"]},{country:"Cape Verde",iso3Code:"CPV",iso2Code:"CV",datasetCodes:["cv-address-ed"],searchTypes:["singleline","validate"]},{country:"Cape Verde",iso3Code:"CPV",iso2Code:"CV",datasetCodes:["cv-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Cayman Islands",iso3Code:"CYM",iso2Code:"KY",datasetCodes:["ky-address-ed"],searchTypes:["singleline","validate"]},{country:"Cayman Islands",iso3Code:"CYM",iso2Code:"KY",datasetCodes:["ky-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Central African Republic",iso3Code:"CAF",iso2Code:"CF",datasetCodes:["cf-address-ed"],searchTypes:["singleline","validate"]},{country:"Central African Republic",iso3Code:"CAF",iso2Code:"CF",datasetCodes:["cf-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Chad",iso3Code:"TCD",iso2Code:"TD",datasetCodes:["td-address-ed"],searchTypes:["singleline","validate"]},{country:"Chad",iso3Code:"TCD",iso2Code:"TD",datasetCodes:["td-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Chile",iso3Code:"CHL",iso2Code:"CL",datasetCodes:["cl-address-ed"],searchTypes:["singleline","validate"]},{country:"Chile",iso3Code:"CHL",iso2Code:"CL",datasetCodes:["cl-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"China",iso3Code:"CHN",iso2Code:"CN",datasetCodes:["cn-address-ed"],searchTypes:["singleline","validate"]},{country:"China",iso3Code:"CHN",iso2Code:"CN",datasetCodes:["cn-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Christmas Island",iso3Code:"CXR",iso2Code:"CX",datasetCodes:["cx-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Cocos Island",iso3Code:"CCK",iso2Code:"CC",datasetCodes:["cc-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Colombia",iso3Code:"COL",iso2Code:"CO",datasetCodes:["co-address-ed"],searchTypes:["singleline","validate"]},{country:"Colombia",iso3Code:"COL",iso2Code:"CO",datasetCodes:["co-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Comoros",iso3Code:"COM",iso2Code:"KM",datasetCodes:["km-address-ed"],searchTypes:["singleline","validate"]},{country:"Comoros",iso3Code:"COM",iso2Code:"KM",datasetCodes:["km-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Congo",iso3Code:"COG",iso2Code:"CG",datasetCodes:["cg-address-ed"],searchTypes:["singleline","validate"]},{country:"Congo",iso3Code:"COG",iso2Code:"CG",datasetCodes:["cg-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Congo, The Democratic Republic of the",iso3Code:"COD",iso2Code:"CD",datasetCodes:["cd-address-ed"],searchTypes:["singleline","validate"]},{country:"Congo, The Democratic Republic of the",iso3Code:"COD",iso2Code:"CD",datasetCodes:["cd-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Cook Islands",iso3Code:"COK",iso2Code:"CK",datasetCodes:["ck-address-ed"],searchTypes:["singleline","validate"]},{country:"Cook Islands",iso3Code:"COK",iso2Code:"CK",datasetCodes:["ck-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Costa Rica",iso3Code:"CRI",iso2Code:"CR",datasetCodes:["cr-address-ed"],searchTypes:["singleline","validate"]},{country:"Costa Rica",iso3Code:"CRI",iso2Code:"CR",datasetCodes:["cr-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Croatia",iso3Code:"HRV",iso2Code:"HR",datasetCodes:["hr-address-ed"],searchTypes:["singleline","validate"]},{country:"Croatia",iso3Code:"HRV",iso2Code:"HR",datasetCodes:["hr-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Cuba",iso3Code:"CUB",iso2Code:"CU",datasetCodes:["cu-address-ed"],searchTypes:["singleline","validate"]},{country:"Cuba",iso3Code:"CUB",iso2Code:"CU",datasetCodes:["cu-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Curaçao",iso3Code:"CUW",iso2Code:"CW",datasetCodes:["cw-address-ed"],searchTypes:["singleline","validate"]},{country:"Curaçao",iso3Code:"CUW",iso2Code:"CW",datasetCodes:["cw-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Cyprus",iso3Code:"CYP",iso2Code:"CY",datasetCodes:["cy-address-ed"],searchTypes:["singleline","validate"]},{country:"Cyprus",iso3Code:"CYP",iso2Code:"CY",datasetCodes:["cy-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Czech Republic",iso3Code:"CZE",iso2Code:"CZ",datasetCodes:["cz-address-ed"],searchTypes:["singleline","validate"]},{country:"Czech Republic",iso3Code:"CZE",iso2Code:"CZ",datasetCodes:["cz-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Côte d'Ivoire",iso3Code:"CIV",iso2Code:"CI",datasetCodes:["ci-address-ed"],searchTypes:["singleline","validate"]},{country:"Côte d'Ivoire",iso3Code:"CIV",iso2Code:"CI",datasetCodes:["ci-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Denmark",iso3Code:"DNK",iso2Code:"DK",datasetCodes:["dk-address"],searchTypes:["singleline","typedown","validate"]},{country:"Denmark",iso3Code:"DNK",iso2Code:"DK",datasetCodes:["dk-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Djibouti",iso3Code:"DJI",iso2Code:"DJ",datasetCodes:["dj-address-ed"],searchTypes:["singleline","validate"]},{country:"Djibouti",iso3Code:"DJI",iso2Code:"DJ",datasetCodes:["dj-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Dominica",iso3Code:"DMA",iso2Code:"DM",datasetCodes:["dm-address-ed"],searchTypes:["singleline","validate"]},{country:"Dominica",iso3Code:"DMA",iso2Code:"DM",datasetCodes:["dm-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Dominican Republic",iso3Code:"DOM",iso2Code:"DO",datasetCodes:["do-address-ed"],searchTypes:["singleline","validate"]},{country:"Dominican Republic",iso3Code:"DOM",iso2Code:"DO",datasetCodes:["do-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Ecuador",iso3Code:"ECU",iso2Code:"EC",datasetCodes:["ec-address-ed"],searchTypes:["singleline","validate"]},{country:"Ecuador",iso3Code:"ECU",iso2Code:"EC",datasetCodes:["ec-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Egypt",iso3Code:"EGY",iso2Code:"EG",datasetCodes:["eg-address-ed"],searchTypes:["singleline","validate"]},{country:"Egypt",iso3Code:"EGY",iso2Code:"EG",datasetCodes:["eg-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"El Salvador",iso3Code:"SLV",iso2Code:"SV",datasetCodes:["sv-address-ed"],searchTypes:["singleline","validate"]},{country:"El Salvador",iso3Code:"SLV",iso2Code:"SV",datasetCodes:["sv-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Equatorial Guinea",iso3Code:"GNQ",iso2Code:"GQ",datasetCodes:["gq-address-ed"],searchTypes:["singleline","validate"]},{country:"Equatorial Guinea",iso3Code:"GNQ",iso2Code:"GQ",datasetCodes:["gq-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Eritrea",iso3Code:"ERI",iso2Code:"ER",datasetCodes:["er-address-ed"],searchTypes:["singleline","validate"]},{country:"Eritrea",iso3Code:"ERI",iso2Code:"ER",datasetCodes:["er-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Estonia",iso3Code:"EST",iso2Code:"EE",datasetCodes:["ee-address-ed"],searchTypes:["singleline","validate"]},{country:"Estonia",iso3Code:"EST",iso2Code:"EE",datasetCodes:["ee-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Ethiopia",iso3Code:"ETH",iso2Code:"ET",datasetCodes:["et-address-ed"],searchTypes:["singleline","validate"]},{country:"Ethiopia",iso3Code:"ETH",iso2Code:"ET",datasetCodes:["et-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Falkland Islands (Malvinas)",iso3Code:"FLK",iso2Code:"FK",datasetCodes:["fk-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Faroe Islands",iso3Code:"FRO",iso2Code:"FO",datasetCodes:["fo-address-ed"],searchTypes:["singleline","validate"]},{country:"Faroe Islands",iso3Code:"FRO",iso2Code:"FO",datasetCodes:["fo-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Fiji",iso3Code:"FJI",iso2Code:"FJ",datasetCodes:["fj-address-ed"],searchTypes:["singleline","validate"]},{country:"Fiji",iso3Code:"FJI",iso2Code:"FJ",datasetCodes:["fj-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Finland",iso3Code:"FIN",iso2Code:"FI",datasetCodes:["fi-address"],searchTypes:["singleline","typedown"]},{country:"Finland",iso3Code:"FIN",iso2Code:"FI",datasetCodes:["fi-address-ed"],searchTypes:["validate"]},{country:"Finland",iso3Code:"FIN",iso2Code:"FI",datasetCodes:["fi-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"France Street Level",iso3Code:"FRA",iso2Code:"FR",datasetCodes:["fr-address-streetlevel"],searchTypes:["singleline","typedown","validate"]},{country:"France Sub-Premises Level",iso3Code:"FRA",iso2Code:"FR",datasetCodes:["fr-additional-hexaline3"],searchTypes:["autocomplete","singleline","typedown"]},{country:"France Premises Level",iso3Code:"FRA",iso2Code:"FR",datasetCodes:["fr-address"],searchTypes:["singleline","typedown","validate"]},{country:"French Guiana",iso3Code:"GUF",iso2Code:"GF",datasetCodes:["gf-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"French Polynesia",iso3Code:"PYF",iso2Code:"PF",datasetCodes:["pf-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Gabon",iso3Code:"GAB",iso2Code:"GA",datasetCodes:["ga-address-ed"],searchTypes:["singleline","validate"]},{country:"Gabon",iso3Code:"GAB",iso2Code:"GA",datasetCodes:["ga-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Gambia",iso3Code:"GMB",iso2Code:"GM",datasetCodes:["gm-address-ed"],searchTypes:["singleline","validate"]},{country:"Gambia",iso3Code:"GMB",iso2Code:"GM",datasetCodes:["gm-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Georgia",iso3Code:"GEO",iso2Code:"GE",datasetCodes:["ge-address-ed"],searchTypes:["singleline","validate"]},{country:"Georgia",iso3Code:"GEO",iso2Code:"GE",datasetCodes:["ge-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Germany",iso3Code:"DEU",iso2Code:"DE",datasetCodes:["de-address"],searchTypes:["singleline","typedown","validate"]},{country:"Germany",iso3Code:"DEU",iso2Code:"DE",datasetCodes:["de-address-ed"],searchTypes:["validate"]},{country:"Germany",iso3Code:"DEU",iso2Code:"DE",datasetCodes:["de-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Ghana",iso3Code:"GHA",iso2Code:"GH",datasetCodes:["gh-address-ed"],searchTypes:["singleline","validate"]},{country:"Ghana",iso3Code:"GHA",iso2Code:"GH",datasetCodes:["gh-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Gibraltar",iso3Code:"GIB",iso2Code:"GI",datasetCodes:["gi-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Greece",iso3Code:"GRC",iso2Code:"GR",datasetCodes:["gr-address-ed"],searchTypes:["singleline","validate"]},{country:"Greece",iso3Code:"GRC",iso2Code:"GR",datasetCodes:["gr-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Greenland",iso3Code:"GRL",iso2Code:"GL",datasetCodes:["gl-address-ed"],searchTypes:["singleline","validate"]},{country:"Greenland",iso3Code:"GRL",iso2Code:"GL",datasetCodes:["gl-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Grenada",iso3Code:"GRD",iso2Code:"GD",datasetCodes:["gd-address-ed"],searchTypes:["singleline","validate"]},{country:"Grenada",iso3Code:"GRD",iso2Code:"GD",datasetCodes:["gd-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Guadeloupe",iso3Code:"GLP",iso2Code:"GP",datasetCodes:["gp-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Guam",iso3Code:"GUM",iso2Code:"GU",datasetCodes:["gu-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Guatemala",iso3Code:"GTM",iso2Code:"GT",datasetCodes:["gt-address-ed"],searchTypes:["singleline","validate"]},{country:"Guatemala",iso3Code:"GTM",iso2Code:"GT",datasetCodes:["gt-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Guinea",iso3Code:"GIN",iso2Code:"GN",datasetCodes:["gn-address-ed"],searchTypes:["singleline","validate"]},{country:"Guinea",iso3Code:"GIN",iso2Code:"GN",datasetCodes:["gn-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Guinea-Bissau",iso3Code:"GNB",iso2Code:"GW",datasetCodes:["gw-address-ed"],searchTypes:["singleline","validate"]},{country:"Guinea-Bissau",iso3Code:"GNB",iso2Code:"GW",datasetCodes:["gw-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Guyana",iso3Code:"GUY",iso2Code:"GY",datasetCodes:["gy-address-ed"],searchTypes:["singleline","validate"]},{country:"Guyana",iso3Code:"GUY",iso2Code:"GY",datasetCodes:["gy-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Haiti",iso3Code:"HTI",iso2Code:"HT",datasetCodes:["ht-address-ed"],searchTypes:["singleline","validate"]},{country:"Haiti",iso3Code:"HTI",iso2Code:"HT",datasetCodes:["ht-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Honduras",iso3Code:"HND",iso2Code:"HN",datasetCodes:["hn-address-ed"],searchTypes:["singleline","validate"]},{country:"Honduras",iso3Code:"HND",iso2Code:"HN",datasetCodes:["hn-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Hong Kong",iso3Code:"HKG",iso2Code:"HK",datasetCodes:["hk-address-ed"],searchTypes:["singleline","validate"]},{country:"Hong Kong",iso3Code:"HKG",iso2Code:"HK",datasetCodes:["hk-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Hungary",iso3Code:"HUN",iso2Code:"HU",datasetCodes:["hu-address-ed"],searchTypes:["singleline","validate"]},{country:"Hungary",iso3Code:"HUN",iso2Code:"HU",datasetCodes:["hu-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Iceland",iso3Code:"ISL",iso2Code:"IS",datasetCodes:["is-address-ed"],searchTypes:["singleline","validate"]},{country:"Iceland",iso3Code:"ISL",iso2Code:"IS",datasetCodes:["is-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"India",iso3Code:"IND",iso2Code:"IN",datasetCodes:["in-address-ed"],searchTypes:["singleline","validate"]},{country:"India",iso3Code:"IND",iso2Code:"IN",datasetCodes:["in-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Indonesia",iso3Code:"IDN",iso2Code:"ID",datasetCodes:["id-address-ed"],searchTypes:["singleline","validate"]},{country:"Indonesia",iso3Code:"IDN",iso2Code:"ID",datasetCodes:["id-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Iran, Islamic Republic of",iso3Code:"IRN",iso2Code:"IR",datasetCodes:["ir-address-ed"],searchTypes:["singleline","validate"]},{country:"Iran, Islamic Republic of",iso3Code:"IRN",iso2Code:"IR",datasetCodes:["ir-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Iraq",iso3Code:"IRQ",iso2Code:"IQ",datasetCodes:["iq-address-ed"],searchTypes:["singleline","validate"]},{country:"Iraq",iso3Code:"IRQ",iso2Code:"IQ",datasetCodes:["iq-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Ireland",iso3Code:"IRL",iso2Code:"IE",datasetCodes:["ie-address"],searchTypes:["singleline","typedown"]},{country:"Ireland",iso3Code:"IRL",iso2Code:"IE",datasetCodes:["ie-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Ireland Eircode",iso3Code:"IRL",iso2Code:"IE",datasetCodes:["ie-additional-eircode"],searchTypes:["autocomplete","lookupv2"]},{country:"Ireland ECAD",iso3Code:"IRL",iso2Code:"IE",datasetCodes:["ie-address-ecad"],searchTypes:["autocomplete","lookupv2","singleline","typedown"]},{country:"Israel",iso3Code:"ISR",iso2Code:"IL",datasetCodes:["il-address-ed"],searchTypes:["singleline","validate"]},{country:"Israel",iso3Code:"ISR",iso2Code:"IL",datasetCodes:["il-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Italy",iso3Code:"ITA",iso2Code:"IT",datasetCodes:["it-address-ed"],searchTypes:["singleline","validate"]},{country:"Italy",iso3Code:"ITA",iso2Code:"IT",datasetCodes:["it-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Jamaica",iso3Code:"JAM",iso2Code:"JM",datasetCodes:["jm-address-ed"],searchTypes:["singleline","validate"]},{country:"Jamaica",iso3Code:"JAM",iso2Code:"JM",datasetCodes:["jm-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Japan",iso3Code:"JPN",iso2Code:"JP",datasetCodes:["jp-address-ed"],searchTypes:["singleline","validate"]},{country:"Japan",iso3Code:"JPN",iso2Code:"JP",datasetCodes:["jp-address-ea"],searchTypes:["autocomplete","lookupv2"]},{country:"Jordan",iso3Code:"JOR",iso2Code:"JO",datasetCodes:["jo-address-ed"],searchTypes:["singleline","validate"]},{country:"Jordan",iso3Code:"JOR",iso2Code:"JO",datasetCodes:["jo-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Kazakhstan",iso3Code:"KAZ",iso2Code:"KZ",datasetCodes:["kz-address-ed"],searchTypes:["singleline","validate"]},{country:"Kazakhstan",iso3Code:"KAZ",iso2Code:"KZ",datasetCodes:["kz-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Kenya",iso3Code:"KEN",iso2Code:"KE",datasetCodes:["ke-address-ed"],searchTypes:["singleline","validate"]},{country:"Kenya",iso3Code:"KEN",iso2Code:"KE",datasetCodes:["ke-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Kiribati",iso3Code:"KIR",iso2Code:"KI",datasetCodes:["ki-address-ed"],searchTypes:["singleline","validate"]},{country:"Kiribati",iso3Code:"KIR",iso2Code:"KI",datasetCodes:["ki-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Korea, Democratic People's Republic of",iso3Code:"PRK",iso2Code:"KP",datasetCodes:["kp-address-ed"],searchTypes:["singleline","validate"]},{country:"Korea, Democratic People's Republic of",iso3Code:"PRK",iso2Code:"KP",datasetCodes:["kp-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Korea, Republic of",iso3Code:"KOR",iso2Code:"KR",datasetCodes:["kr-address-ed"],searchTypes:["singleline","validate"]},{country:"Korea, Republic of",iso3Code:"KOR",iso2Code:"KR",datasetCodes:["kr-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Kosovo",iso3Code:"KOS",iso2Code:"XK",datasetCodes:["kv-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Kuwait",iso3Code:"KWT",iso2Code:"KW",datasetCodes:["kw-address-ed"],searchTypes:["singleline","validate"]},{country:"Kuwait",iso3Code:"KWT",iso2Code:"KW",datasetCodes:["kw-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Kyrgyzstan",iso3Code:"KGZ",iso2Code:"KG",datasetCodes:["kg-address-ed"],searchTypes:["singleline","validate"]},{country:"Kyrgyzstan",iso3Code:"KGZ",iso2Code:"KG",datasetCodes:["kg-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Laos",iso3Code:"LAO",iso2Code:"LA",datasetCodes:["la-address-ed"],searchTypes:["singleline","validate"]},{country:"Laos",iso3Code:"LAO",iso2Code:"LA",datasetCodes:["la-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Latvia",iso3Code:"LVA",iso2Code:"LV",datasetCodes:["lv-address-ed"],searchTypes:["singleline","validate"]},{country:"Latvia",iso3Code:"LVA",iso2Code:"LV",datasetCodes:["lv-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Lebanon",iso3Code:"LBN",iso2Code:"LB",datasetCodes:["lb-address-ed"],searchTypes:["singleline","validate"]},{country:"Lebanon",iso3Code:"LBN",iso2Code:"LB",datasetCodes:["lb-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Lesotho",iso3Code:"LSO",iso2Code:"LS",datasetCodes:["ls-address-ed"],searchTypes:["singleline","validate"]},{country:"Lesotho",iso3Code:"LSO",iso2Code:"LS",datasetCodes:["ls-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Liberia",iso3Code:"LBR",iso2Code:"LR",datasetCodes:["lr-address-ed"],searchTypes:["singleline","validate"]},{country:"Liberia",iso3Code:"LBR",iso2Code:"LR",datasetCodes:["lr-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Libya",iso3Code:"LBY",iso2Code:"LY",datasetCodes:["ly-address-ed"],searchTypes:["singleline","validate"]},{country:"Libya",iso3Code:"LBY",iso2Code:"LY",datasetCodes:["ly-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Liechtenstein",iso3Code:"LIE",iso2Code:"LI",datasetCodes:["li-address-ed"],searchTypes:["singleline","validate"]},{country:"Liechtenstein",iso3Code:"LIE",iso2Code:"LI",datasetCodes:["li-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Lithuania",iso3Code:"LTU",iso2Code:"LT",datasetCodes:["lt-address-ed"],searchTypes:["singleline","validate"]},{country:"Lithuania",iso3Code:"LTU",iso2Code:"LT",datasetCodes:["lt-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Luxembourg",iso3Code:"LUX",iso2Code:"LU",datasetCodes:["lu-address"],searchTypes:["singleline","typedown","validate"]},{country:"Luxembourg",iso3Code:"LUX",iso2Code:"LU",datasetCodes:["lu-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Macau",iso3Code:"MAC",iso2Code:"MO",datasetCodes:["lv-address-ed"],searchTypes:["singleline","validate"]},{country:"Macau",iso3Code:"MAC",iso2Code:"MO",datasetCodes:["lv-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Madagascar",iso3Code:"MDG",iso2Code:"MG",datasetCodes:["mo-address-ed"],searchTypes:["singleline","validate"]},{country:"Madagascar",iso3Code:"MDG",iso2Code:"MG",datasetCodes:["mo-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Malawi",iso3Code:"MWI",iso2Code:"MW",datasetCodes:["mw-address-ed"],searchTypes:["singleline","validate"]},{country:"Malawi",iso3Code:"MWI",iso2Code:"MW",datasetCodes:["mw-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Malaysia",iso3Code:"MYS",iso2Code:"MY",datasetCodes:["my-address-ed"],searchTypes:["singleline","validate"]},{country:"Malaysia",iso3Code:"MYS",iso2Code:"MY",datasetCodes:["my-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Maldives",iso3Code:"MDV",iso2Code:"MV",datasetCodes:["mv-address-ed"],searchTypes:["singleline","validate"]},{country:"Maldives",iso3Code:"MDV",iso2Code:"MV",datasetCodes:["mv-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Mali",iso3Code:"MLI",iso2Code:"ML",datasetCodes:["ml-address-ed"],searchTypes:["singleline","validate"]},{country:"Mali",iso3Code:"MLI",iso2Code:"ML",datasetCodes:["ml-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Malta",iso3Code:"MLT",iso2Code:"MT",datasetCodes:["mt-address-ed"],searchTypes:["singleline","validate"]},{country:"Malta",iso3Code:"MLT",iso2Code:"MT",datasetCodes:["mt-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Marshall Islands",iso3Code:"MHL",iso2Code:"MH",datasetCodes:["mh-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Martinique",iso3Code:"MTQ",iso2Code:"MQ",datasetCodes:["mq-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Mauritania",iso3Code:"MRT",iso2Code:"MR",datasetCodes:["mr-address-ed"],searchTypes:["singleline","validate"]},{country:"Mauritania",iso3Code:"MRT",iso2Code:"MR",datasetCodes:["mr-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Mauritius",iso3Code:"MUS",iso2Code:"MU",datasetCodes:["mu-address-ed"],searchTypes:["singleline","validate"]},{country:"Mauritius",iso3Code:"MUS",iso2Code:"MU",datasetCodes:["mu-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Mayotte",iso3Code:"MYT",iso2Code:"YT",datasetCodes:["yt-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Mexico",iso3Code:"MEX",iso2Code:"MX",datasetCodes:["mx-address-ed"],searchTypes:["singleline","validate"]},{country:"Mexico",iso3Code:"MEX",iso2Code:"MX",datasetCodes:["mx-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Micronesia, Federated States of",iso3Code:"FSM",iso2Code:"FM",datasetCodes:["fm-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Moldova",iso3Code:"MDA",iso2Code:"MD",datasetCodes:["md-address-ed"],searchTypes:["singleline","validate"]},{country:"Moldova",iso3Code:"MDA",iso2Code:"MD",datasetCodes:["md-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Monaco",iso3Code:"MCO",iso2Code:"MC",datasetCodes:["mc-address-ed"],searchTypes:["singleline","validate"]},{country:"Monaco",iso3Code:"MCO",iso2Code:"MC",datasetCodes:["mc-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Mongolia",iso3Code:"MNG",iso2Code:"MN",datasetCodes:["mn-address-ed"],searchTypes:["singleline","validate"]},{country:"Mongolia",iso3Code:"MNG",iso2Code:"MN",datasetCodes:["mn-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Montenegro",iso3Code:"MNE",iso2Code:"ME",datasetCodes:["me-address-ed"],searchTypes:["singleline","validate"]},{country:"Montenegro",iso3Code:"MNE",iso2Code:"ME",datasetCodes:["me-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Montserrat",iso3Code:"MSR",iso2Code:"MS",datasetCodes:["ms-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Morocco",iso3Code:"MAR",iso2Code:"MA",datasetCodes:["ma-address-ed"],searchTypes:["singleline","validate"]},{country:"Morocco",iso3Code:"MAR",iso2Code:"MA",datasetCodes:["ma-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Mozambique",iso3Code:"MOZ",iso2Code:"MZ",datasetCodes:["mz-address-ed"],searchTypes:["singleline","validate"]},{country:"Mozambique",iso3Code:"MOZ",iso2Code:"MZ",datasetCodes:["mz-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Myanmar",iso3Code:"MMR",iso2Code:"MM",datasetCodes:["mm-address-ed"],searchTypes:["singleline","validate"]},{country:"Myanmar",iso3Code:"MMR",iso2Code:"MM",datasetCodes:["mm-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Namibia",iso3Code:"NAM",iso2Code:"NA",datasetCodes:["na-address-ed"],searchTypes:["singleline","validate"]},{country:"Namibia",iso3Code:"NAM",iso2Code:"NA",datasetCodes:["na-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Nauru",iso3Code:"NRU",iso2Code:"NR",datasetCodes:["nr-address-ed"],searchTypes:["singleline","validate"]},{country:"Nauru",iso3Code:"NRU",iso2Code:"NR",datasetCodes:["nr-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Nepal",iso3Code:"NPL",iso2Code:"NP",datasetCodes:["np-address-ed"],searchTypes:["singleline","validate"]},{country:"Nepal",iso3Code:"NPL",iso2Code:"NP",datasetCodes:["np-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Netherlands",iso3Code:"NLD",iso2Code:"NL",datasetCodes:["nl-address"],searchTypes:["singleline","typedown","validate"]},{country:"Netherlands",iso3Code:"NLD",iso2Code:"NL",datasetCodes:["nl-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"New Caledonia",iso3Code:"NCL",iso2Code:"NC",datasetCodes:["nc-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"New Zealand DataFusion",iso3Code:"NZL",iso2Code:"NZ",datasetCodes:["nz-additional-datafusion"],searchTypes:["autocomplete","singleline","typedown","validate","lookupv2"]},{country:"New Zealand Postal Address",iso3Code:"NZL",iso2Code:"NZ",datasetCodes:["nz-address"],searchTypes:["autocomplete","singleline","typedown","validate","lookupv2"]},{country:"Nicaragua",iso3Code:"NIC",iso2Code:"NI",datasetCodes:["ni-address-ed"],searchTypes:["singleline","validate"]},{country:"Nicaragua",iso3Code:"NIC",iso2Code:"NI",datasetCodes:["ni-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Niger",iso3Code:"NER",iso2Code:"NE",datasetCodes:["ne-address-ed"],searchTypes:["singleline","validate"]},{country:"Niger",iso3Code:"NER",iso2Code:"NE",datasetCodes:["ne-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Nigeria",iso3Code:"NGA",iso2Code:"NG",datasetCodes:["ng-address-ed"],searchTypes:["singleline","validate"]},{country:"Nigeria",iso3Code:"NGA",iso2Code:"NG",datasetCodes:["ng-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Niue",iso3Code:"NIU",iso2Code:"NU",datasetCodes:["nu-address-ed"],searchTypes:["singleline","validate"]},{country:"Niue",iso3Code:"NIU",iso2Code:"NU",datasetCodes:["nu-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Norfolk Island",iso3Code:"NFK",iso2Code:"NF",datasetCodes:["nf-address-ed"],searchTypes:["singleline","validate"]},{country:"Norfolk Island",iso3Code:"NFK",iso2Code:"NF",datasetCodes:["nf-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"North Macedonia",iso3Code:"MKD",iso2Code:"MK",datasetCodes:["mk-address-ed"],searchTypes:["singleline","validate"]},{country:"North Macedonia",iso3Code:"MKD",iso2Code:"MK",datasetCodes:["mk-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Northern Mariana Islands",iso3Code:"MNP",iso2Code:"MP",datasetCodes:["mp-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Norway",iso3Code:"NOR",iso2Code:"NO",datasetCodes:["no-address"],searchTypes:["singleline","typedown"]},{country:"Norway",iso3Code:"NOR",iso2Code:"NO",datasetCodes:["no-address-ed"],searchTypes:["validate"]},{country:"Norway",iso3Code:"NOR",iso2Code:"NO",datasetCodes:["no-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Oman",iso3Code:"OMN",iso2Code:"OM",datasetCodes:["om-address-ed"],searchTypes:["singleline","validate"]},{country:"Oman",iso3Code:"OMN",iso2Code:"OM",datasetCodes:["om-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Pakistan",iso3Code:"PAK",iso2Code:"PK",datasetCodes:["pk-address-ed"],searchTypes:["singleline","validate"]},{country:"Pakistan",iso3Code:"PAK",iso2Code:"PK",datasetCodes:["pk-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Palau",iso3Code:"PLW",iso2Code:"PW",datasetCodes:["pw-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Palestine",iso3Code:"PSE",iso2Code:"PS",datasetCodes:["ps-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Panama",iso3Code:"PAN",iso2Code:"PA",datasetCodes:["pa-address-ed"],searchTypes:["singleline","validate"]},{country:"Panama",iso3Code:"PAN",iso2Code:"PA",datasetCodes:["pa-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Papua New Guinea",iso3Code:"PNG",iso2Code:"PG",datasetCodes:["pg-address-ed"],searchTypes:["singleline","validate"]},{country:"Papua New Guinea",iso3Code:"PNG",iso2Code:"PG",datasetCodes:["pg-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Paraguay",iso3Code:"PRY",iso2Code:"PY",datasetCodes:["py-address-ed"],searchTypes:["singleline","validate"]},{country:"Paraguay",iso3Code:"PRY",iso2Code:"PY",datasetCodes:["py-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Peru",iso3Code:"PER",iso2Code:"PE",datasetCodes:["pe-address-ed"],searchTypes:["singleline","validate"]},{country:"Peru",iso3Code:"PER",iso2Code:"PE",datasetCodes:["pe-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Philippines",iso3Code:"PHL",iso2Code:"PH",datasetCodes:["ph-address-ed"],searchTypes:["singleline","validate"]},{country:"Philippines",iso3Code:"PHL",iso2Code:"PH",datasetCodes:["ph-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Pitcairn Islands",iso3Code:"PCN",iso2Code:"PN",datasetCodes:["pn-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Poland",iso3Code:"POL",iso2Code:"PL",datasetCodes:["pl-address-ed"],searchTypes:["singleline","validate"]},{country:"Poland",iso3Code:"POL",iso2Code:"PL",datasetCodes:["pl-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Portugal",iso3Code:"PRT",iso2Code:"PT",datasetCodes:["pt-address-ed"],searchTypes:["singleline","validate"]},{country:"Portugal",iso3Code:"PRT",iso2Code:"PT",datasetCodes:["pt-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Qatar",iso3Code:"QAT",iso2Code:"QA",datasetCodes:["qa-address-ed"],searchTypes:["singleline","validate"]},{country:"Qatar",iso3Code:"QAT",iso2Code:"QA",datasetCodes:["qa-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Romania",iso3Code:"ROU",iso2Code:"RO",datasetCodes:["ro-address-ed"],searchTypes:["singleline","validate"]},{country:"Romania",iso3Code:"ROU",iso2Code:"RO",datasetCodes:["ro-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Russian Federation",iso3Code:"RUS",iso2Code:"RU",datasetCodes:["ru-address-ed"],searchTypes:["singleline","validate"]},{country:"Russian Federation",iso3Code:"RUS",iso2Code:"RU",datasetCodes:["ru-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Rwanda",iso3Code:"RWA",iso2Code:"RW",datasetCodes:["rw-address-ed"],searchTypes:["singleline","validate"]},{country:"Rwanda",iso3Code:"RWA",iso2Code:"RW",datasetCodes:["rw-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Réunion",iso3Code:"REU",iso2Code:"RE",datasetCodes:["re-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Saint Barthélemy",iso3Code:"BLM",iso2Code:"BL",datasetCodes:["bl-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Saint Helena",iso3Code:"SHN",iso2Code:"SH",datasetCodes:["sh-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Saint Kitts and Nevis",iso3Code:"KNA",iso2Code:"KN",datasetCodes:["kn-address-ed"],searchTypes:["singleline","validate"]},{country:"Saint Kitts and Nevis",iso3Code:"KNA",iso2Code:"KN",datasetCodes:["kn-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Saint Lucia",iso3Code:"LCA",iso2Code:"LC",datasetCodes:["lc-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Saint Martin",iso3Code:"MAF",iso2Code:"MF",datasetCodes:["mf-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Saint Pierre and Miquelon",iso3Code:"SPM",iso2Code:"PM",datasetCodes:["pm-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Saint Vincent and the Grenadines",iso3Code:"VCT",iso2Code:"VC",datasetCodes:["vc-address-ed"],searchTypes:["singleline","validate"]},{country:"Saint Vincent and the Grenadines",iso3Code:"VCT",iso2Code:"VC",datasetCodes:["vc-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Samoa",iso3Code:"WSM",iso2Code:"WS",datasetCodes:["ws-address-ed"],searchTypes:["singleline","validate"]},{country:"Samoa",iso3Code:"WSM",iso2Code:"WS",datasetCodes:["ws-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"San Marino",iso3Code:"SMR",iso2Code:"SM",datasetCodes:["sm-address-ed"],searchTypes:["singleline","validate"]},{country:"San Marino",iso3Code:"SMR",iso2Code:"SM",datasetCodes:["sm-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Sao Tome and Principe",iso3Code:"STP",iso2Code:"ST",datasetCodes:["st-address-ed"],searchTypes:["singleline","validate"]},{country:"Sao Tome and Principe",iso3Code:"STP",iso2Code:"ST",datasetCodes:["st-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Saudi Arabia",iso3Code:"SAU",iso2Code:"SA",datasetCodes:["sa-address-ed"],searchTypes:["singleline","validate"]},{country:"Saudi Arabia",iso3Code:"SAU",iso2Code:"SA",datasetCodes:["sa-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Senegal",iso3Code:"SEN",iso2Code:"SN",datasetCodes:["sn-address-ed"],searchTypes:["singleline","validate"]},{country:"Senegal",iso3Code:"SEN",iso2Code:"SN",datasetCodes:["sn-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Serbia",iso3Code:"SRB",iso2Code:"RS",datasetCodes:["rs-address-ed"],searchTypes:["singleline","validate"]},{country:"Serbia",iso3Code:"SRB",iso2Code:"RS",datasetCodes:["rs-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Seychelles",iso3Code:"SYC",iso2Code:"SC",datasetCodes:["sc-address-ed"],searchTypes:["singleline","validate"]},{country:"Seychelles",iso3Code:"SYC",iso2Code:"SC",datasetCodes:["sc-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Sierra Leone",iso3Code:"SLE",iso2Code:"SL",datasetCodes:["sl-address-ed"],searchTypes:["singleline","validate"]},{country:"Sierra Leone",iso3Code:"SLE",iso2Code:"SL",datasetCodes:["sl-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Singapore",iso3Code:"SGP",iso2Code:"SG",datasetCodes:["sg-address"],searchTypes:["autocomplete","singleline","typedown","validate","lookupv2"]},{country:"Sint Maarten",iso3Code:"SXM",iso2Code:"SX",datasetCodes:["sx-address-ed"],searchTypes:["singleline","validate"]},{country:"Sint Maarten",iso3Code:"SXM",iso2Code:"SX",datasetCodes:["sx-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Slovakia",iso3Code:"SVK",iso2Code:"SK",datasetCodes:["sk-address-ed"],searchTypes:["singleline","validate"]},{country:"Slovakia",iso3Code:"SVK",iso2Code:"SK",datasetCodes:["sk-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Slovenia",iso3Code:"SVN",iso2Code:"SI",datasetCodes:["si-address-ed"],searchTypes:["singleline","validate"]},{country:"Slovenia",iso3Code:"SVN",iso2Code:"SI",datasetCodes:["si-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Solomon Islands",iso3Code:"SLB",iso2Code:"SB",datasetCodes:["sb-address-ed"],searchTypes:["singleline","validate"]},{country:"Solomon Islands",iso3Code:"SLB",iso2Code:"SB",datasetCodes:["sb-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Somalia",iso3Code:"SOM",iso2Code:"SO",datasetCodes:["so-address-ed"],searchTypes:["singleline","validate"]},{country:"Somalia",iso3Code:"SOM",iso2Code:"SO",datasetCodes:["so-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"South Africa",iso3Code:"ZAF",iso2Code:"ZA",datasetCodes:["za-address-ed"],searchTypes:["singleline","validate"]},{country:"South Africa",iso3Code:"ZAF",iso2Code:"ZA",datasetCodes:["za-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"South Georgia and the South Sandwich Islands",iso3Code:"SGS",iso2Code:"GS",datasetCodes:["gs-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"South Sudan",iso3Code:"SSD",iso2Code:"SS",datasetCodes:["ss-address-ed"],searchTypes:["singleline","validate"]},{country:"South Sudan",iso3Code:"SSD",iso2Code:"SS",datasetCodes:["ss-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Spain",iso3Code:"ESP",iso2Code:"ES",datasetCodes:["es-address"],searchTypes:["singleline","typedown"]},{country:"Spain",iso3Code:"ESP",iso2Code:"ES",datasetCodes:["es-address-ed"],searchTypes:["validate"]},{country:"Spain",iso3Code:"ESP",iso2Code:"ES",datasetCodes:["es-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Sri Lanka",iso3Code:"LKA",iso2Code:"LK",datasetCodes:["lk-address-ed"],searchTypes:["singleline","validate"]},{country:"Sudan",iso3Code:"SDN",iso2Code:"SD",datasetCodes:["sd-address-ed"],searchTypes:["singleline","validate"]},{country:"Sudan",iso3Code:"SDN",iso2Code:"SD",datasetCodes:["sd-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Suriname",iso3Code:"SUR",iso2Code:"SR",datasetCodes:["sr-address-ed"],searchTypes:["singleline","validate"]},{country:"Suriname",iso3Code:"SUR",iso2Code:"SR",datasetCodes:["sr-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Svalbard and Jan Mayen Islands",iso3Code:"SJM",iso2Code:"SJ",datasetCodes:["sj-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Swaziland (Eswatini)",iso3Code:"SWZ",iso2Code:"SZ",datasetCodes:["sz-address-ed"],searchTypes:["singleline","validate"]},{country:"Swaziland (Eswatini)",iso3Code:"SWZ",iso2Code:"SZ",datasetCodes:["sz-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Sweden",iso3Code:"SWE",iso2Code:"SE",datasetCodes:["se-address"],searchTypes:["singleline","typedown"]},{country:"Sweden",iso3Code:"SWE",iso2Code:"SE",datasetCodes:["se-address-ed"],searchTypes:["validate"]},{country:"Sweden",iso3Code:"SWE",iso2Code:"SE",datasetCodes:["se-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Switzerland",iso3Code:"CHE",iso2Code:"CH",datasetCodes:["ch-address"],searchTypes:["singleline","typedown"]},{country:"Switzerland",iso3Code:"CHE",iso2Code:"CH",datasetCodes:["ch-address-ed"],searchTypes:["validate"]},{country:"Switzerland",iso3Code:"CHE",iso2Code:"CH",datasetCodes:["ch-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Syria",iso3Code:"SYR",iso2Code:"SY",datasetCodes:["sy-address-ed"],searchTypes:["singleline","validate"]},{country:"Syria",iso3Code:"SYR",iso2Code:"SY",datasetCodes:["sy-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Taiwan",iso3Code:"TWN",iso2Code:"TW",datasetCodes:["tw-address-ed"],searchTypes:["singleline","validate"]},{country:"Taiwan",iso3Code:"TWN",iso2Code:"TW",datasetCodes:["tw-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Tajikistan",iso3Code:"TJK",iso2Code:"TJ",datasetCodes:["tj-address-ed"],searchTypes:["singleline","validate"]},{country:"Tajikistan",iso3Code:"TJK",iso2Code:"TJ",datasetCodes:["tj-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Tanzania",iso3Code:"TZA",iso2Code:"TZ",datasetCodes:["tz-address-ed"],searchTypes:["singleline","validate"]},{country:"Tanzania",iso3Code:"TZA",iso2Code:"TZ",datasetCodes:["tz-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Thailand",iso3Code:"THA",iso2Code:"TH",datasetCodes:["th-address-ed"],searchTypes:["singleline","validate"]},{country:"Thailand",iso3Code:"THA",iso2Code:"TH",datasetCodes:["th-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Timor-Leste",iso3Code:"TLS",iso2Code:"TL",datasetCodes:["tl-address-ed"],searchTypes:["singleline","validate"]},{country:"Timor-Leste",iso3Code:"TLS",iso2Code:"TL",datasetCodes:["tl-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Togo",iso3Code:"TGO",iso2Code:"TG",datasetCodes:["tg-address-ed"],searchTypes:["singleline","validate"]},{country:"Togo",iso3Code:"TGO",iso2Code:"TG",datasetCodes:["tg-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Tokelau",iso3Code:"TKL",iso2Code:"TK",datasetCodes:["tk-address-ed"],searchTypes:["singleline","validate"]},{country:"Tokelau",iso3Code:"TKL",iso2Code:"TK",datasetCodes:["tk-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Tonga",iso3Code:"TON",iso2Code:"TO",datasetCodes:["to-address-ed"],searchTypes:["singleline","validate"]},{country:"Tonga",iso3Code:"TON",iso2Code:"TO",datasetCodes:["to-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Trinidad and Tobago",iso3Code:"TTO",iso2Code:"TT",datasetCodes:["tt-address-ed"],searchTypes:["singleline","validate"]},{country:"Trinidad and Tobago",iso3Code:"TTO",iso2Code:"TT",datasetCodes:["tt-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Tunisia",iso3Code:"TUN",iso2Code:"TN",datasetCodes:["tn-address-ed"],searchTypes:["singleline","validate"]},{country:"Tunisia",iso3Code:"TUN",iso2Code:"TN",datasetCodes:["tn-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Turkey",iso3Code:"TUR",iso2Code:"TR",datasetCodes:["tr-address-ed"],searchTypes:["singleline","validate"]},{country:"Turkey",iso3Code:"TUR",iso2Code:"TR",datasetCodes:["tr-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Turkish Republic of Northern Cyprus",iso3Code:"NCY",iso2Code:"CY",datasetCodes:["ny-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Turkmenistan",iso3Code:"TKM",iso2Code:"TM",datasetCodes:["tm-address-ed"],searchTypes:["singleline","validate"]},{country:"Turkmenistan",iso3Code:"TKM",iso2Code:"TM",datasetCodes:["tm-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Turks and Caicos Islands",iso3Code:"TCA",iso2Code:"TC",datasetCodes:["tc-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Tuvalu",iso3Code:"TUV",iso2Code:"TV",datasetCodes:["tv-address-ed"],searchTypes:["singleline","validate"]},{country:"Tuvalu",iso3Code:"TUV",iso2Code:"TV",datasetCodes:["tv-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Uganda",iso3Code:"UGA",iso2Code:"UG",datasetCodes:["ug-address-ed"],searchTypes:["singleline","validate"]},{country:"Uganda",iso3Code:"UGA",iso2Code:"UG",datasetCodes:["ug-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Ukraine",iso3Code:"UKR",iso2Code:"UA",datasetCodes:["ua-address-ed"],searchTypes:["singleline","validate"]},{country:"Ukraine",iso3Code:"UKR",iso2Code:"UA",datasetCodes:["ua-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"United Arab Emirates",iso3Code:"ARE",iso2Code:"AE",datasetCodes:["ae-address-ed"],searchTypes:["singleline","validate"]},{country:"United Arab Emirates",iso3Code:"ARE",iso2Code:"AE",datasetCodes:["ae-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"United Kingdom",iso3Code:"GBR",iso2Code:"GB",datasetCodes:["gb-additional-multipleresidence","gb-additional-notyetbuilt"],searchTypes:["autocomplete","singleline","typedown","validate","lookupv2","combined"]},{country:"United Kingdom (Postal Address File only)",iso3Code:"GBR",iso2Code:"GB",datasetCodes:["gb-address"],searchTypes:["autocomplete","singleline","typedown","validate","lookupv2","combined"]},{country:"United Kingdom AddressBase Premium",iso3Code:"GBR",iso2Code:"GB",datasetCodes:["gb-address-addressbase"],searchTypes:["singleline","typedown","validate","lookup"]},{country:"United Kingdom AddressBase Premium Full Electoral Register",iso3Code:"GBR",iso2Code:"GB",datasetCodes:["gb-address-addressbasenames"],searchTypes:["autocomplete","singleline","typedown","validate","lookup"]},{country:"United Kingdom AddressBase Premium with Islands",iso3Code:"GBR",iso2Code:"GB",datasetCodes:["gb-additional-addressbaseislands"],searchTypes:["singleline","typedown","validate","lookup"]},{country:"United Kingdom Business Names",iso3Code:"GBR",iso2Code:"GB",datasetCodes:["gb-additional-business"],searchTypes:["autocomplete","singleline","typedown"]},{country:"United Kingdom Multiple Residence",iso3Code:"GBR",iso2Code:"GB",datasetCodes:["gb-additional-multipleresidence"],searchTypes:["autocomplete","singleline","typedown","validate","lookupv2","combined"]},{country:"United Kingdom Not Yet Built",iso3Code:"GBR",iso2Code:"GB",datasetCodes:["gb-additional-notyetbuilt"],searchTypes:["autocomplete","singleline","typedown","validate","lookupv2","combined"]},{country:"United Kingdom Utilities (Electricity and Gas)",iso3Code:"GBR",iso2Code:"GB",datasetCodes:["gb-additional-electricity","gb-additional-gas"],searchTypes:["autocomplete","singleline","typedown","combined"]},{country:"United Kingdom - Electricity Meter Point Administration Number (MPAN)",iso3Code:"GBR",iso2Code:"GB",datasetCodes:["gb-additional-electricity"],searchTypes:["lookupv2","combined"]},{country:"United Kingdom - Gas Meter Point Reference Number (MPRN)",iso3Code:"GBR",iso2Code:"GB",datasetCodes:["gb-additional-gas"],searchTypes:["lookupv2","combined"]},{country:"United Kingdom Street Level",iso3Code:"GBR",iso2Code:"GB",datasetCodes:["gb-address-streetlevel"],searchTypes:["singleline","typedown"]},{country:"United Kingdom Extended Business",iso3Code:"GBR",iso2Code:"GB",datasetCodes:["gb-additional-businessextended"],searchTypes:["singleline","typedown","validate","lookup"]},{country:"United Kingdom Cymraeg (Welsh Language) Postal Address",iso3Code:"GBR",iso2Code:"GB",datasetCodes:["gb-address-wales"],searchTypes:["singleline","typedown","validate"]},{country:"United States of America",iso3Code:"USA",iso2Code:"US",datasetCodes:["us-address"],searchTypes:["autocomplete","singleline","typedown","validate","lookupv2"]},{country:"Uruguay",iso3Code:"URY",iso2Code:"UY",datasetCodes:["uy-address-ed"],searchTypes:["singleline","validate"]},{country:"Uruguay",iso3Code:"URY",iso2Code:"UY",datasetCodes:["uy-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Uzbekistan",iso3Code:"UZB",iso2Code:"UZ",datasetCodes:["uz-address-ed"],searchTypes:["singleline","validate"]},{country:"Uzbekistan",iso3Code:"UZB",iso2Code:"UZ",datasetCodes:["uz-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Vanuatu",iso3Code:"VUT",iso2Code:"VU",datasetCodes:["vu-address-ed"],searchTypes:["singleline","validate"]},{country:"Vanuatu",iso3Code:"VUT",iso2Code:"VU",datasetCodes:["vu-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Vatican City (Holy See)",iso3Code:"VAT",iso2Code:"VA",datasetCodes:["va-address-ed"],searchTypes:["singleline","validate"]},{country:"Vatican City (Holy See)",iso3Code:"VAT",iso2Code:"VA",datasetCodes:["va-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Venezuela",iso3Code:"VEN",iso2Code:"VE",datasetCodes:["ve-address-ed"],searchTypes:["singleline","validate"]},{country:"Venezuela",iso3Code:"VEN",iso2Code:"VE",datasetCodes:["ve-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Viet Nam",iso3Code:"VNM",iso2Code:"VN",datasetCodes:["vn-address-ed"],searchTypes:["singleline","validate"]},{country:"Viet Nam",iso3Code:"VNM",iso2Code:"VN",datasetCodes:["vn-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Virgin Islands, British",iso3Code:"VGB",iso2Code:"VG",datasetCodes:["vg-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Virgin Islands, U.S.",iso3Code:"VIR",iso2Code:"VI",datasetCodes:["vi-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Wallis and Futuna Islands",iso3Code:"WLF",iso2Code:"WF",datasetCodes:["wf-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Western Sahara",iso3Code:"ESH",iso2Code:"EH",datasetCodes:["eh-address-ed"],searchTypes:["singleline","validate"]},{country:"Western Sahara",iso3Code:"ESH",iso2Code:"EH",datasetCodes:["eh-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Yemen",iso3Code:"YEM",iso2Code:"YE",datasetCodes:["ye-address-ed"],searchTypes:["singleline","validate"]},{country:"Yemen",iso3Code:"YEM",iso2Code:"YE",datasetCodes:["ye-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Zambia",iso3Code:"ZMB",iso2Code:"ZM",datasetCodes:["zm-address-ed"],searchTypes:["singleline","validate"]},{country:"Zambia",iso3Code:"ZMB",iso2Code:"ZM",datasetCodes:["zm-address-eh"],searchTypes:["autocomplete","lookupv2"]},{country:"Zimbabwe",iso3Code:"ZWE",iso2Code:"ZW",datasetCodes:["zw-address-ed"],searchTypes:["singleline","validate"]},{country:"Zimbabwe",iso3Code:"ZWE",iso2Code:"ZW",datasetCodes:["zw-address-eh"],searchTypes:["autocomplete","lookupv2"]}],u=[{countryIso:"GBR",minLength:4,mode:s.POSTAL_CODE,format:/^[A-Za-z]{1,2}[0-9][A-Za-z0-9]? ?[0-9][A-Za-z]{0,2}$/},{countryIso:"GBR",minLength:null,mode:s.WHAT3WORDS,format:/^\/{0,}(?:[^0-9`~!@#$%^&*()+\-_=[{\]}\\|'<,.>?/";:£§º©®\s]+[.｡。･・︒។։။۔።।][^0-9`~!@#$%^&*()+\-_=[{\]}\\|'<,.>?/";:£§º©®\s]+[.｡。･・︒។։။۔።।][^0-9`~!@#$%^&*()+\-_=[{\]}\\|'<,.>?/";:£§º©®\s]+|[^0-9`~!@#$%^&*()+\-_=[{\]}\\|'<,.>?/";:£§º©®\s]+([\u0020\u00A0][^0-9`~!@#$%^&*()+\-_=[{\]}\\|'<,.>?/";:£§º©®\s]+){1,3}[.｡。･・︒។։။۔።।][^0-9`~!@#$%^&*()+\-_=[{\]}\\|'<,.>?/";:£§º©®\s]+([\u0020\u00A0][^0-9`~!@#$%^&*()+\-_=[{\]}\\|'<,.>?/";:£§º©®\s]+){1,3}[.｡。･・︒។։။۔።।][^0-9`~!@#$%^&*()+\-_=[{\]}\\|'<,.>?/";:£§º©®\s]+([\u0020\u00A0][^0-9`~!@#$%^&*()+\-_=[{\]}\\|'<,.>?/";:£§º©®\s]+){1,3})$/},{countryIso:"GBR",minLength:null,mode:s.MPAN,format:/^\d{13,21}$/},{countryIso:"GBR",minLength:null,mode:s.MPRN,format:/^\d{8,10}$/},{countryIso:"GBR",minLength:null,mode:s.UDPRN,format:/^\d{8}$/}],p={en:{gbr:{locality:"Locality",region:"Region",postal_code:"Postal code"},usa:{locality:"Locality",region:"Region",postal_code:"Postal code"}}},C=function(){this.size=0,this.maxSuggestions=25},h=function(){this.detailsMap=new Map},y="AUS Geocodes",m={latitude:"Latitude",longitude:"Longitude",match_level:"Match Level",sa1:"Sa1",meshblock:"Meshblock",lga_code:"Lga Code",lga_name:"Lga Name",street_pid:"Street Pid",locality_pid:"Locality Pid",geocode_level_code:"Geocode Level Code",geocode_level_description:"Geocode Level Description",geocode_type_code:"Geocode Type Code",geocode_type_description:"Geocode Type Description",highest_level_longitude:"Highest Level Longitude",highest_level_latitude:"Highest Level Latitude",highest_level_geocode_reliability_code:"Highest Level Geocode Reliability Code",highest_level_geocode_reliability_description:"Highest Level Geocode Reliability Description",confidence_level_code:"Confidence Level Code",confidence_level_description:"Confidence Level Description","2016_meshblock_id":"2016 Meshblock Id","2016_meshblock_code":"2016 Meshblock Code","2016_meshblock_match_code":"2016 Meshblock Match Code","2016_meshblock_match_description":"2016 Meshblock Match Description",collector_district_id:"Collector District Id",collector_district_code:"Collector District Code",commonwealth_electoral_boundary_id:"Commonwealth Electoral Boundary Id",commonwealth_electoral_boundary_name:"Commonwealth Electoral Boundary Name",statistical_local_area_id:"Statistical Local Area Id",statistical_local_area_code:"Statistical Local Area Code",statistical_local_area_name:"Statistical Local Area Name",state_electoral_boundary_id:"State Electoral Boundary Id",state_electoral_boundary_name:"State Electoral Boundary Name",state_electoral_effective_start:"State Electoral Effective Start",state_electoral_effective_end:"State Electoral Effective End",state_electoral_new_pid:"State Electoral New Pid",state_electoral_new_name:"State Electoral New Name",state_electoral_new_effective_start:"State Electoral New Effective Start",address_level_longitude:"Address Level Longitude",address_level_latitude:"Address Level Latitude",address_level_geocode_reliability_code:"Address Level Geocode Reliability Code",address_level_geocode_reliability_description:"Address Level Geocode Reliability Description",street_level_longitude:"Street Level Longitude",street_level_latitude:"Street Level Latitude",street_level_boundary_extent:"Street Level Boundary Extent",street_level_geocode_reliability_code:"Street Level Geocode Reliability Code",street_level_geocode_reliability_description:"Street Level Geocode Reliability Description",locality_level_longitude:"Locality Level Longitude",locality_level_latitude:"Locality Level Latitude",locality_level_geocode_reliability_code:"Locality Level Geocode Reliability Code",locality_level_geocode_reliability_description:"Locality Level Geocode Reliability Description",gnaf_legal_parcel_identifier:"Gnaf Legal Parcel Identifier",locality_class_code:"Locality Class Code"},g="NZL Geocodes",v={front_of_property_nztm_x_coordinate:"Front of Property NZTM X Coordinate",front_of_property_nztm_y_coordinate:"Front of Property NZTM Y Coordinate",centroid_of_property_nztm_x_coordinate:"Centroid of Property NZTM X Coordinate",centroid_of_property_nztm_y_coordinate:"Centroid of Property NZTM Y Coordinate",front_of_property_latitude:"Front of Property Latitude",front_of_property_longitude:"Front of Property Longitude",centroid_of_property_latitude:"Centroid of Property Latitude",centroid_of_property_longitude:"Centroid of Property Longitude",linz_parcel_id:"Linz Parcel Id",property_purpose_type:"Property Purpose Type",addressable:"Addressable",mesh_block_code:"Mesh Block Code",territorial_authority_code:"Territorial Authority Code",territorial_authority_name:"Territorial Authority Name",regional_council_code:"Regional Council Code",regional_council_name:"Regional Council Name",general_electorate_code:"General Electorate Code",general_electorate_name:"General Electorate Name",maori_electorate_code:"Maori Electorate Code",maori_electorate_name:"Maori Electorate Name",match_level:"Match Level"},T="USA Geocodes",k={latitude:"Latitude",longitude:"Longitude",match_level:"Match Level",census_tract:"Census Tract",census_block:"Census Block",core_based_statistical_area:"Core Based Statistical Area",congressional_district_code:"Congressional District Code",county_code:"Country Code"},_="GBR Location Essential",f={latitude:"Latitude",longitude:"Longitude",match_level:"Match Level",udprn:"UDPRN",uprn:"UPRN",x_coordinate:"X Coordinate",y_coordinate:"Y Coordinate"},A={latitude:"Latitude",longitude:"Longitude",name:"Name",description:"Description"},S="Global Geocodes",b={latitude:"Latitude",longitude:"Longitude",match_level:"Match Level"},L={locality_class_code:[{id:"A",title:"ALIAS ONLY LOCALITY"},{id:"D",title:"DISTRICT"},{id:"G",title:"GAZETTED LOCALITY"},{id:"H",title:"HUNDRED"},{id:"I",title:"INDIGENOUS LOCATION",description:"Location identified in the Australian government indigenous programs and policy locations (AGIL) dataset available at http://data.gov.au"},{id:"M",title:"MANUALLY VALIDATED"},{id:"T",title:"TOPOGRAPHIC LOCALITY"},{id:"U",title:"UNOFFICIAL SUBURB"},{id:"V",title:"UNOFFICIAL TOPOGRAPHIC FEATURE"}]},E=function(){function t(s){var t=this;this.countryDropdown=[],this.componentsCollectionMap=new Map,this.metadataCollectionMap=new Map,this.matchInfoCollectionMap=new Map,this.geocodes=new h,this.cvHousehold=new h,this.tooltipDescriptionMap=new Map,this.premiumLocationInsightMap=new Map,this.baseUrl="https://api.experianaperture.io/",this.datasetsEndpoint="address/datasets/v1",this.searchEndpoint="address/search/v1",this.lookupV2Endpoint="address/lookup/v2",this.validateEndpoint="address/validate/v1",this.promptsetEndpoint="address/promptsets/v1",this.stepInEndpoint="address/suggestions/stepin/v1",this.refineEndpoint="address/suggestions/refine/v1",this.enrichmentEndpoint="enrichment/v2",this.abnDataset="gb-address-addressbasenames",this.poweredByLogo={element:null,create:function(e){var s={text:"".concat(this.svg," <em>Powered by Experian</em>"),format:""},t=e.createListItem(s);return t.classList.add("powered-by-experian"),e.list.parentNode.appendChild(t),t},destroy:function(e){this.element&&(e.list.parentNode.removeChild(this.element),this.element=void 0)},svg:'<svg class="experian-logo" version="1.1" width="18" height="18" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 120 120" style="" xml:space="preserve" role="img" aria-label="Powered by Experian">\n            <title>Experian logo</title>\n            <g>\n                <path style="fill: #0E6EB6" d="M56.1,27h-13c-3.9,0-7-3.1-7-7V7c0-3.9,3.1-7,7-7h13c3.9,0,7,3.1,7,7v13C63.1,23.8,60,27,56.1,27"></path>\n                <path style="fill: #72217B" d="M22.5,56.1H7.9c-4.3,0-7.9-3.5-7.9-7.9V33.6c0-4.3,3.5-7.9,7.9-7.9h14.6c4.3,0,7.9,3.5,7.9,7.9v14.6C30.4,52.6,26.8,56.1,22.5,56.1"></path>\n                <path style="fill: #B12384" d="M21.1,86.4h-8.9c-2.7,0-4.8-2.1-4.8-4.8v-8.9c0-2.7,2.2-4.8,4.8-4.8h8.9c2.7,0,4.8,2.2,4.8,4.8v8.9C25.9,84.3,23.7,86.4,21.1,86.4"></path>\n                <path style="fill: #E72887" d="M45.1,114.7H34.5c-3.1,0-5.7-2.5-5.7-5.7V98.4c0-3.1,2.5-5.7,5.7-5.7h10.6c3.1,0,5.7,2.5,5.7,5.7V109C50.7,112.1,48.2,114.7,45.1,114.7"></path>\n                <path style="fill: #E72887" d="M83.8,32.3h-7.3c-2.2,0-3.9-1.8-3.9-3.9v-7.3c0-2.2,1.8-3.9,3.9-3.9h7.3c2.2,0,3.9,1.8,3.9,3.9v7.3C87.7,30.5,85.9,32.3,83.8,32.3"></path>\n                <path style="fill: #004691" d="M81.7,61.8C81.5,51.1,72,42,60.7,42C49,42,39.6,51.3,39.6,62.9C39.6,74.6,49,84,60.7,84c5.6,0,10.8-2.2,14.6-5.9c0.7-0.7,1.2-1.6,1.2-2.6c0-1.9-1.6-3.5-3.5-3.5c-1.1,0-2,0.7-2.8,1.4c-2.4,2.5-5.9,3.7-9.5,3.7c-7,0-12.7-4.8-13.9-11.5h31.5c0,0,0,0,0.1,0h0.1c0.1,0,0.1,0,0.2,0c0.1,0,0.2,0,0.4-0.1C80.4,65,81.7,63.6,81.7,61.8z M60.7,48.9c6.3,0,11.6,4.1,13.4,9.7H47.3C49.1,53,54.3,48.9,60.7,48.9z"></path>\n            </g>\n        </svg>'},this.result={formattedAddressContainer:null,lastAddressField:null,generateAddressLineRequired:!1,show:function(s){var o,a;if(t.searchSpinner.hide(),t.picklist.hide(),t.lastSearchTerm="",t.searchType===e.AUTOCOMPLETE||s.result.address&&s.result.confidence!==d.NO_MATCHES)if(t.inputs.forEach((function(e){return e.value=""})),t.result.calculateIfAddressLineGenerationRequired(),t.currentDataSet[0]===t.abnDataset){var i=(s.result.address.address_line_1?JSON.stringify(s.result.address.address_line_1+", "):"")+(s.result.address.address_line_2?JSON.stringify(s.result.address.address_line_2+", "):"")+(s.result.address.address_line_3?JSON.stringify(s.result.address.address_line_3+", "):"")+(s.result.address.locality?JSON.stringify(s.result.address.locality+", "):"")+(s.result.address.region?JSON.stringify(s.result.address.region+", "):"")+(s.result.address.postal_code?JSON.stringify(s.result.address.postal_code+", "):"")+(s.result.address.country?JSON.stringify(s.result.address.country):"");t.inputs[0].value=i.replace(/"/g,"");var r=t.extractNamesFromAddress(s.result);t.populateForenamePicklist(r),t.picklist.container.remove(),(t.inputs[1]||t.inputs[2]||t.inputs[3])&&!i&&t.picklist.show(s),t.searchSpinner.hide(),t.options.elements.validateButton&&t.options.elements.validateButton.addEventListener("click",(function(){event.preventDefault(),t.populateFormatContainer(s)}))}else{t.result.formattedAddressContainer=t.options.elements.formattedAddressContainer,!t.result.formattedAddressContainer&&t.result.generateAddressLineRequired&&t.result.createFormattedAddressContainer();var n=s.result.address;if((null===(o=s.result)||void 0===o?void 0:o.addresses_formatted)&&(n=s.result.addresses_formatted[0].address),n)for(var l=0;l<Object.keys(n).length;l++){var c=n[p=Object.keys(n)[l]];t.result.updateAddressLine(p,c,"address-line-input")}t.componentsCollectionMap.clear();var u=s.result.components;if(u)for(l=0;l<Object.keys(u).length;l++){var p=Object.keys(u)[l];t.componentsCollectionMap.set(p,u[p])}t.metadataCollectionMap.clear();var C=s.metadata;if(C)for(l=0;l<Object.keys(C).length;l++)p=Object.keys(C)[l],t.metadataCollectionMap.set(p,C[p]);t.matchInfoCollectionMap.clear();var h=null===(a=null==s?void 0:s.result)||void 0===a?void 0:a.match_info;if(h)for(l=0;l<Object.keys(h).length;l++)p=Object.keys(h)[l],t.matchInfoCollectionMap.set(p,h[p]);if(t.toggleSearchInputs("hide"),t.hasSearchInputBeenReset=!0,t.searchType===e.AUTOCOMPLETE)for(var y in t.options.elements)if(Object.prototype.hasOwnProperty.call(t.options.elements,y)&&"input"!==y&&t.options.elements[y]===t.inputs[0]){t.hasSearchInputBeenReset=!1;break}t.result.createSearchAgainLink()}t.currentDataSet[0]!==t.abnDataset&&t.events.trigger("post-formatting-search",s)},showLookupV2:function(e){if(t.searchSpinner.hide(),t.picklist.hide(),t.lastSearchTerm="",e.result.addresses_formatted){t.inputs.forEach((function(e){return e.value=""})),t.result.calculateIfAddressLineGenerationRequired(),t.result.formattedAddressContainer=t.options.elements.formattedAddressContainer,!t.result.formattedAddressContainer&&t.result.generateAddressLineRequired&&t.result.createFormattedAddressContainer();var s={};e.result.addresses_formatted[0].address.gas_meters?s={address_line_1:e.result.addresses_formatted[0].address.gas_meters[0].rel_address_primary_name,address_line_2:e.result.addresses_formatted[0].address.gas_meters[0].rel_address_street1,locality:e.result.addresses_formatted[0].address.gas_meters[0].rel_address_town,postal_code:e.result.addresses_formatted[0].address.gas_meters[0].rel_address_postcode,country:e.result.addresses_formatted[0].address.gas_meters[0].rel_address_country?e.result.addresses_formatted[0].address.gas_meters[0].rel_address_country:"United Kingdom"}:e.result.addresses_formatted[0].address.electricity_meters&&(s={address_line_1:e.result.addresses_formatted[0].address.electricity_meters[0].address_line_3,address_line_2:e.result.addresses_formatted[0].address.electricity_meters[0].address_line_5,locality:e.result.addresses_formatted[0].address.electricity_meters[0].address_line_8,postal_code:e.result.addresses_formatted[0].address.electricity_meters[0].address_postal_code,country:e.result.addresses_formatted[0].address.electricity_meters[0].address_country?e.result.addresses_formatted[0].address.electricity_meters[0].address_country:"United Kingdom"});for(var o=0;o<Object.keys(s).length;o++){var a=Object.keys(s)[o],d=s[a];t.result.updateAddressLine(a,d,"address-line-input")}t.toggleSearchInputs("hide"),t.hasSearchInputBeenReset=!0,t.result.createSearchAgainLink()}t.events.trigger("post-formatting-search",e)},hide:function(){for(var e in t.result.formattedAddressContainer&&(t.result.formattedAddressContainer.parentNode.removeChild(t.result.formattedAddressContainer),t.result.formattedAddressContainer=void 0),t.options.searchAgain.link&&(t.options.searchAgain.link.parentNode.removeChild(t.options.searchAgain.link),t.options.searchAgain.link=void 0),t.options.elements)if(Object.prototype.hasOwnProperty.call(t.options.elements,e))for(var s=0;s<l.addressLineLabels.length;s++)if(l.addressLineLabels[s]===e&&t.options.elements[e]!==t.inputs[0]){t.options.elements[e].value="";break}},createAddressLine:{input:function(e,s,t){var o=document.createElement("div");o.classList.add(t);var a=document.createElement("label");a.innerHTML=e.replace(/([A-Z])/g," $1").replace(/([0-9])/g," $1").replace(/^./,(function(e){return e.toUpperCase()})),o.appendChild(a);var d=document.createElement("input");return d.setAttribute("type","text"),d.setAttribute("name",e),d.setAttribute("value",s),o.appendChild(d),o},label:function(e){var s=e,o=t.options.language.toLowerCase(),a=t.currentCountryCode.toLowerCase();if(p)try{var d=p[o][a][e];d&&(s=d)}catch(e){}return s}},createFormattedAddressContainer:function(){var s=document.createElement("div");s.classList.add("formatted-address");var o=t.searchType===e.SINGLELINE?t.inputs.length-1:0;t.inputs[o].parentNode.insertBefore(s,t.inputs[o].nextSibling),t.result.formattedAddressContainer=s},createHeading:function(){if(t.options.formattedAddressContainer.showHeading){var e=document.createElement(t.options.formattedAddressContainer.headingType);e.innerHTML=t.options.formattedAddressContainer.validatedHeadingText,t.result.formattedAddressContainer.appendChild(e)}},updateHeading:function(e){t.options.formattedAddressContainer.showHeading&&(t.result.formattedAddressContainer.querySelector(t.options.formattedAddressContainer.headingType).innerHTML=e)},calculateIfAddressLineGenerationRequired:function(){t.result.generateAddressLineRequired=!0;for(var e=0;e<l.addressLineLabels.length;e++){var s=l.addressLineLabels[e];if(t.options.elements[s]){t.result.generateAddressLineRequired=!1;break}}},updateAddressLine:function(e,s,o){if(t.options.elements[e]){var a=t.options.elements[e];t.result.updateLabel(e);var d=s;a.value&&d&&(d=", "+d),"INPUT"===a.nodeName||"TEXTAREA"===a.nodeName||"SELECT"===a.nodeName?a.value+=d:a.innerText+=d,t.result.lastAddressField=a}else if(t.result.generateAddressLineRequired){var i=t.result.createAddressLine.label(e),r=t.result.createAddressLine.input(i,s,o);t.result.formattedAddressContainer.appendChild(r)}},updateLabel:function(e){var s=e,o=t.options.language.toLowerCase(),a=t.currentCountryCode.toLowerCase();if(p)try{var d=p[o][a][e];if(d){s=d;for(var i=document.getElementsByTagName("label"),r=0;r<i.length;r++)i[r].htmlFor===e&&(i[r].innerHTML=d)}}catch(e){}return s},createSearchAgainLink:function(){if(t.options.searchAgain.visible){var e=document.createElement("button");e.setAttribute("type","button"),e.classList.add("search-again-button"),e.innerText=t.options.searchAgain.text,e.addEventListener("click",t.globalReset.bind(t)),t.options.searchAgain.link=e,t.result.formattedAddressContainer?t.result.formattedAddressContainer.appendChild(e):t.result.lastAddressField&&t.result.lastAddressField.parentNode.insertBefore(e,t.result.lastAddressField.nextSibling)}},renderInputList:function(e){if(e.length>0)for(var s=0;s<e.length;s++)t.result.formattedAddressContainer.appendChild(e[s])},handleUtilitiesLookupResponse:function(e){e.result.confidence===d.VERIFIED_MATCH?e.result.addresses_formatted&&t.result.showLookupV2(e):"No matches"===e.result.confidence&&t.picklist.handleEmptyPicklist(e),t.events.trigger("post-formatting-search",e)},handleValidateResponse:function(e){e.result.confidence===d.VERIFIED_MATCH||e.result.confidence===d.INTERACTION_REQUIRED?e.result.address?t.result.show(e):e.result.suggestions&&t.format(e.result.suggestions[0].format):e.result.suggestions?t.picklist.show(e):"No matches"===e.result.confidence&&t.picklist.handleEmptyPicklist(e)},handleEnrichmentResponse:function(e){var s,o,a,d=t.geocodes.detailsMap,i=t.cvHousehold.detailsMap;d.clear(),i.clear(),t.premiumLocationInsightMap.clear(),e.result.aus_regional_geocodes?(t.geocodes.title=y,s=Object.entries(e.result.aus_regional_geocodes),o=new Map(Object.entries(m)),a=new Map(Object.entries(L))):e.result.nzl_regional_geocodes?(t.geocodes.title=g,s=Object.entries(e.result.nzl_regional_geocodes),o=new Map(Object.entries(v))):e.result.usa_regional_geocodes?(t.geocodes.title=T,s=Object.entries(e.result.usa_regional_geocodes),o=new Map(Object.entries(k))):e.result.uk_location_essential?(t.geocodes.title=_,s=Object.entries(e.result.uk_location_essential),o=new Map(Object.entries(f))):(t.geocodes.title=S,s=Object.entries(e.result.geocodes),o=new Map(Object.entries(b)));var r=e.result.premium_location_insight;if(r)for(var n=0;n<Object.keys(r).length;n++){var l=Object.keys(r)[n],c=r[l];Array.isArray(c)&&1===c.length?t.premiumLocationInsightMap.set(l,c[0]):t.premiumLocationInsightMap.set(l,c)}t.populateResponseToMap(s,o,a,d),t.populateResponseToMap(void 0,void 0,void 0,i),t.events.trigger("post-enrichment",e)}},this.searchSpinner={show:function(){var e;if(t.options.useSpinner){var s=document.createElement("div");s.classList.add("loader"),s.classList.add("loader-inline");var o=document.createElement("div");o.classList.add("spinner"),s.appendChild(o),null===(e=t.inputs[0].parentNode)||void 0===e||e.insertBefore(s,t.inputs[0].nextSibling)}},hide:function(){var e,s;if(t.options.useSpinner){var o=null===(e=t.inputs[0].parentNode)||void 0===e?void 0:e.querySelector(".loader-inline");o&&(null===(s=t.inputs[0].parentNode)||void 0===s||s.removeChild(o))}}},this.options=this.mergeDefaultOptions(s),this.events=new o,this.setup()}return t.prototype.setToken=function(e){this.options.token=e,this.setup()},t.prototype.setSearchType=function(e){this.searchType=e,this.globalReset(),this.setInputs(),this.events.trigger("post-search-type-change",e)},t.prototype.getLookupEnrichmentData=function(e){if(e){var s={geocodes:Object.keys(b),premium_location_insight:["geocodes","geocodes_building_xy","geocodes_access","time"]};this.callEnrichment(e,s)}},t.prototype.getEnrichmentData=function(e){this.events.trigger("pre-enrichment"),this.result.handleEnrichmentResponse(e)},t.prototype.getEnrichmentAttributes=function(e){if(e){var s=["geocodes","geocodes_building_xy","geocodes_access","time"];return"NZL"==this.currentCountryCode?{nzl_regional_geocodes:Object.keys(v),premium_location_insight:s}:"AUS"==this.currentCountryCode?{aus_regional_geocodes:Object.keys(m),premium_location_insight:s}:"USA"==this.currentCountryCode?{usa_regional_geocodes:Object.keys(k),premium_location_insight:s}:"GBR"==this.currentCountryCode?{uk_location_essential:Object.keys(f),what3words:Object.keys(A),premium_location_insight:s}:{geocodes:Object.keys(b),premium_location_insight:s}}},t.prototype.callEnrichment=function(e,s){var t={country_iso:this.currentCountryCode,keys:{global_address_key:e},attributes:s};this.events.trigger("pre-enrichment"),this.request.send(this.baseUrl+this.enrichmentEndpoint,"POST",this.result.handleEnrichmentResponse,JSON.stringify(t))},t.prototype.setup=function(){var t=this;this.token?(this.hasSearchInputBeenReset=!0,this.request=new a(this),this.setCountryList(),this.setInputs(),this.createPicklist(),this.searchType=e.COMBINED,this.avMode=s.SEARCH):setTimeout((function(){return t.events.trigger("request-error-401")}))},t.prototype.getParameter=function(e){e=e.replace(/[[]/,"\\[").replace(/[\]]/,"\\]");var s=new RegExp("[\\?&]"+e+"=([^&#]*)").exec(location.search);return null===s?"":decodeURIComponent(s[1].replace(/\+/g," "))},Object.defineProperty(t.prototype,"token",{get:function(){return this.options.token||(this.options.token=this.getParameter("token")),this.options.token},enumerable:!1,configurable:!0}),t.prototype.mergeDefaultOptions=function(e){var s=e||{};return s.enabled=!0,this.searchType=s.searchType||l.searchType,s.searchType=s.searchType||l.searchType,s.language=s.language||l.language,s.useSpinner=s.useSpinner||l.useSpinner,s.applyFocus=void 0!==s.applyFocus?s.applyFocus:l.input.applyFocus,s.placeholderText=s.placeholderText||l.input.placeholderText,s.searchAgain=s.searchAgain||{},s.searchAgain.visible=void 0!==s.searchAgain.visible?s.searchAgain.visible:l.searchAgain.visible,s.searchAgain.text=s.searchAgain.text||l.searchAgain.text,s.formattedAddressContainer=s.formattedAddressContainer||l.formattedAddressContainer,s.formattedAddressContainer.showHeading=void 0!==s.formattedAddressContainer.showHeading?s.formattedAddressContainer.showHeading:l.formattedAddressContainer.showHeading,s.formattedAddressContainer.headingType=s.formattedAddressContainer.headingType||l.formattedAddressContainer.headingType,s.formattedAddressContainer.validatedHeadingText=s.formattedAddressContainer.validatedHeadingText||l.formattedAddressContainer.validatedHeadingText,s.formattedAddressContainer.manualHeadingText=s.formattedAddressContainer.manualHeadingText||l.formattedAddressContainer.manualHeadingText,s.useAddressEnteredText=s.useAddressEnteredText||l.useAddressEnteredText,s.elements=s.elements||{},s},t.prototype.getPromptset=function(){var s=this;if(this.currentCountryCode){if(this.currentDataSet=this.lookupDatasetCodes(),this.currentDataSet){if(this.searchType===e.AUTOCOMPLETE||this.searchType===e.COMBINED){var t=[];return t.push({example:this.options.placeholderText,prompt:"Address",suggested_input_length:160}),"USA"!==this.currentCountryCode&&"CAN"!==this.currentCountryCode&&"AUS"!==this.currentCountryCode||(t=[{example:this.options.placeholderText,prompt:"Address",suggested_input_length:160},{prompt:"Regions to include",suggested_input_length:160},{prompt:"Regions to exclude",suggested_input_length:160},{prompt:"Existence of field",suggested_input_length:160,dropdown_options:Object.values(r)}]),this.currentDataSet[0]===this.abnDataset&&t.push({example:"John",prompt:"Forename",suggested_input_length:160},{example:"James",prompt:"Middle Name",suggested_input_length:160},{example:"Doe",prompt:"Surname",suggested_input_length:160}),void setTimeout((function(){return s.handlePromptsetResult({result:{lines:t}})}))}if(this.searchType===e.VALIDATE){var o=[{prompt:"Address line 1",suggested_input_length:160},{prompt:"Address line 2",suggested_input_length:160},{prompt:"Address line 3",suggested_input_length:160},{prompt:this.result.createAddressLine.label("locality"),suggested_input_length:160},{prompt:this.result.createAddressLine.label("region"),suggested_input_length:160},{prompt:this.result.createAddressLine.label("postal_code"),suggested_input_length:160}];return void setTimeout((function(){return s.handlePromptsetResult({result:{lines:o}})}))}if(this.searchType===e.LOOKUPV2){var a=JSON.stringify(this.currentDataSet.map((function(e){return e.toUpperCase()})).sort()),d=[{prompt:"Lookup type",suggested_input_length:160,dropdown_options:Object.values(i).filter((function(e){return 0==e.dataset.length||e.dataset.map((function(e){return JSON.stringify(e.map((function(e){return e.toUpperCase()})).sort())})).some((function(e){return e==a}))}))},{prompt:'Return addresses - if "true" addresses are returned in the response',suggested_input_length:160,dropdown_options:Object.values(r)},{prompt:"Lookup value",suggested_input_length:160}];return"jp-address-ea"===this.currentDataSet[0]&&(d[1]={prompt:"Preferred script",suggested_input_length:160,dropdown_options:Object.values(n)}),"gb-additional-electricity"!==this.currentDataSet[0]&&"gb-additional-gas"!==this.currentDataSet[0]||(d[0].dropdown_options=d[0].dropdown_options.slice(0,1)),void setTimeout((function(){return s.handlePromptsetResult({result:{lines:d}})}))}var l={country_iso:this.currentCountryCode,datasets:Array.isArray(this.currentDataSet)?this.currentDataSet:[this.currentDataSet],search_type:this.searchType,prompt_set:"optimal"};return this.events.trigger("pre-promptset-check"),void this.request.send(this.baseUrl+this.promptsetEndpoint,"POST",this.handlePromptsetResult.bind(this),JSON.stringify(l))}this.events.trigger("error-display","Unsupported search type '"+this.searchType+"' for country dataset '"+this.currentCountryName+"'.")}},t.prototype.lookupDatasetCodes=function(){var e=this,s=c.find((function(s){return s.iso3Code===e.currentCountryCode&&s.country===e.currentCountryName&&s.searchTypes.includes(e.searchType)}));if(s)return s.datasetCodes},t.prototype.lookupSearchTypes=function(s,t){var o=c.filter((function(e){return e.iso3Code===s&&e.country===t}));if(o.length>0){var a=Object.values(e);return o.flatMap((function(e){return e.searchTypes})).map((function(s){return e[s.toUpperCase()]})).sort((function(e,s){return a.indexOf(e)-a.indexOf(s)}))}},t.prototype.readPredefinedFormats=function(){var e=this,s=u.filter((function(s){return s.countryIso===e.currentCountryCode}));if(s)return s},t.prototype.handlePromptsetResult=function(e){this.picklist.hide(),this.events.trigger("post-promptset-check",e)},t.prototype.setInputs=function(s){void 0===s&&(s=this.options.elements.inputs),s?this.registerInputs(s):this.getPromptset(),this.searchType!==e.AUTOCOMPLETE&&this.searchType!==e.COMBINED&&this.options.elements.lookupButton&&(this.lookupFn=this.search.bind(this),this.options.elements.lookupButton.addEventListener("click",this.lookupFn))},t.prototype.registerInputs=function(s){var t=this;this.inputs=Array.from(s),this.inputs.forEach((function(s){s.setAttribute(e.AUTOCOMPLETE,"new-password"),s.setAttribute(e.COMBINED,"new-password"),t.searchType!==e.AUTOCOMPLETE&&t.searchType!==e.COMBINED||(t.keyUpFn=t.search.bind(t),s.addEventListener("keyup",t.keyUpFn),t.checkTabFn=t.checkTab.bind(t),s.addEventListener("keydown",t.checkTabFn)),s.addEventListener("keyup",t.handleKeyboardEvent.bind(t))})),this.countryCodeMapping=this.options.countryCodeMapping||{},this.options.applyFocus&&this.inputs[0].focus()},t.prototype.setCountryList=function(){var e=this.baseUrl+this.datasetsEndpoint;if(this.request.send(e,"GET",this.handleDatasetsResponse.bind(this)),this.options.elements.countryList)this.currentCountryCode=this.options.elements.countryList.value,this.currentCountryName=this.options.elements.countryList[this.options.elements.countryList.selectedIndex].label,this.options.elements.countryList.addEventListener("change",this.handleCountryListChange.bind(this));else{if(!this.options.countryCode)throw new Error("Please provide a country code or a country list element");this.currentCountryCode=this.options.countryCode}},t.prototype.handleDatasetsResponse=function(e){var s=this,t=e.result;if(this.countryDropdown=[],t&&t.length>0){for(var o=0,a=t;o<a.length;o++){for(var d=a[o],i=function(e){var s=c.find((function(s){return 1==s.datasetCodes.length&&s.datasetCodes[0]===e.id}));s&&!r.countryDropdown.find((function(e){return e.country===s.country}))&&r.countryDropdown.push(s)},r=this,n=0,l=Object.values(d.datasets);n<l.length;n++)i(l[n]);d.valid_combinations&&d.valid_combinations.forEach((function(e){var t=e.slice().sort(),o=c.find((function(e){return Array.isArray(e.datasetCodes)&&e.datasetCodes.length===t.length&&e.datasetCodes.slice().sort().every((function(e,s){return e===t[s]}))}));o&&!s.countryDropdown.find((function(e){return e.country===o.country}))&&s.countryDropdown.push(o)}))}this.countryDropdown.sort((function(e,s){return e.country.localeCompare(s.country)})),this.events.trigger("post-datasets-update")}},t.prototype.handleCountryListChange=function(){var t=this.options.elements.countryList;this.currentCountryCode=t.value,this.currentCountryName=t[t.selectedIndex].label,this.getPromptset();var o=this.lookupSearchTypes(this.currentCountryCode,this.currentCountryName),a=!1;null!==this.searchType&&(a=o.indexOf(this.searchType)>=0),a||(this.searchType=e[o[0].toUpperCase()],this.setInputs(),this.events.trigger("post-search-type-change",this.searchType)),this.avMode=s.SEARCH,this.events.trigger("post-country-list-change",o,this.searchType)},t.prototype.generateSearchDataForApiCall=function(){var s,t,o,a,d;return this.currentDataSet||(this.currentDataSet=this.lookupDatasetCodes()),d="USA"===this.currentCountryCode||"CAN"===this.currentCountryCode||"AUS"===this.currentCountryCode?{country_iso:this.currentCountryCode,components:{unspecified:[this.currentSearchTerm],locality:{region:{must_be:this.mustBe,must_not_be:this.mustNotBe,exists:this.exists}}},datasets:Array.isArray(this.currentDataSet)?this.currentDataSet:[this.currentDataSet],max_suggestions:this.options.maxSuggestions||this.picklist.maxSuggestions}:{country_iso:this.currentCountryCode,components:{unspecified:[this.currentSearchTerm]},datasets:Array.isArray(this.currentDataSet)?this.currentDataSet:[this.currentDataSet],max_suggestions:this.options.maxSuggestions||this.picklist.maxSuggestions},this.currentDataSet[0]===this.abnDataset&&(this.inputs[1]||this.inputs[2]||this.inputs[3])&&Object.assign(d.components,{unspecified:[(null===(s=this.inputs[0])||void 0===s?void 0:s.value)||""],names:[{forename:(null===(t=this.inputs[1])||void 0===t?void 0:t.value)||"",middlename:(null===(o=this.inputs[2])||void 0===o?void 0:o.value)||"",surname:(null===(a=this.inputs[3])||void 0===a?void 0:a.value)||""}]}),this.searchType!==e.SINGLELINE&&this.searchType!==e.VALIDATE||(d.attributes={},d.options=[{name:"flatten",Value:"true"},{name:"intensity",Value:"close"},{name:"prompt_set",Value:"default"}],this.currentDataSet.includes("gb-address")||this.currentDataSet.includes("gb-additional-multipleresidence")||this.currentDataSet.includes("gb-additional-notyetbuilt")||this.currentDataSet.includes("gb-address-addressbase")||this.currentDataSet.includes("gb-additional-addressbaseislands")||this.currentDataSet.includes("gb-additional-business")||this.currentDataSet.includes("gb-additional-electricity")||this.currentDataSet.includes("gb-additional-gas")||this.currentDataSet.includes("gb-address-streetlevel")||this.currentDataSet.includes("gb-additional-businessextended")||this.currentDataSet.includes("gb-address-wales")?d.attributes={uk_location_essential:["latitude","longitude","match_level","uprn","x_coordinate","y_coordinate","udprn"]}:this.currentDataSet.includes("us-address")?d.attributes={usa_regional_geocodes:["latitude","longitude","match_level","census_tract","census_block","core_based_statistical_area","congressional_district_code","county_code"]}:(this.currentDataSet.includes("au-address")||this.currentDataSet.includes("au-address-gnaf")||this.currentDataSet.includes("au-address-datafusion"))&&(d.attributes.aus_regional_geocodes=["latitude","longitude","match_level","sa1","meshblock","lga_code","lga_name","street_pid","locality_pid","geocode_level_code","geocode_level_description","geocode_type_code","geocode_type_description","highest_level_longitude","highest_level_latitude","highest_level_elevation","highest_level_planimetric_accuracy","highest_level_boundary_extent","highest_level_geocode_reliability_code","highest_level_geocode_reliability_description","confidence_level_code","confidence_level_description","2021_meshblock_id","2021_meshblock_code","2021_meshblock_match_code","2021_meshblock_match_description","2016_meshblock_id","2016_meshblock_code","2016_meshblock_match_code","2016_meshblock_match_description","address_type_code","primary_address_pid","address_join_type","collector_district_id","collector_district_code","commonwealth_electoral_boundary_id","commonwealth_electoral_boundary_name","statistical_local_area_id","statistical_local_area_code","statistical_local_area_name","state_electoral_boundary_id","state_electoral_boundary_name","state_electoral_effective_start","state_electoral_effective_end","state_electoral_new_pid","state_electoral_new_name","state_electoral_new_effective_start","state_electoral_new_effective_end","address_level_longitude","address_level_latitude","address_level_elevation","address_level_planimetric_accuracy","address_level_boundary_extent","address_level_geocode_reliability_code","address_level_geocode_reliability_description","street_level_longitude","street_level_latitude","street_level_planimetric_accuracy","street_level_boundary_extent","street_level_geocode_reliability_code","street_level_geocode_reliability_description","locality_level_longitude","locality_level_latitude","locality_level_planimetric_accuracy","locality_level_geocode_reliability_code","locality_level_geocode_reliability_description","gnaf_legal_parcel_identifier","locality_class_code"]),d.attributes.premium_location_insight=["geocodes","geocodes_access","geocodes_building_xy","time"],this.searchType===e.SINGLELINE&&(d.options.push({name:"search_type",Value:"singleline"}),delete d.attributes),this.searchType===e.VALIDATE&&(d.layouts=["default"],d.layout_format="default")),this.options.location&&(d.location=this.options.location),JSON.stringify(d)},t.prototype.generateLookupDataForApiCall=function(e,t){this.currentDataSet||(this.currentDataSet=this.lookupDatasetCodes());var o=[],a=[];switch(t){case s.MPAN:this.currentDataSet.includes("gb-additional-electricity")&&o.push("gb-additional-electricity"),a.push("ElectricityUtilityLookup");break;case s.MPRN:this.currentDataSet.includes("gb-additional-gas")&&o.push("gb-additional-gas"),a.push("GasUtilityLookup");break;default:o=Array.isArray(this.currentDataSet)?this.currentDataSet:[this.currentDataSet]}"jp-address-ea"===this.currentDataSet[0]&&(this.preferredScript=[this.inputs[1].value],(this.preferredScript.includes("kana")||this.preferredScript.includes("kanji"))&&(this.preferredLanguage=["ja"]));var d={country_iso:this.currentCountryCode,datasets:o,max_suggestions:this.options.maxSuggestionsForLookup||this.picklist.maxSuggestions,key:{type:this.generateLookupType(t),value:e},preferred_language:this.preferredLanguage,preferred_script:this.preferredScript,layouts:a};return JSON.stringify(d)},t.prototype.getWhat3WordsLookupValue=function(e,s){return e.startsWith("///")&&s&&(e=e.slice(3)),e},t.prototype.handleKeyboardEvent=function(e){e.preventDefault();var s=this.getKey(e);if(this.picklist.size){if("ArrowUp"===s||"ArrowDown"===s||"Enter"===s)return void this.picklist.keyup(e)}else if("Enter"===s)return void this.search(e)},t.prototype.search=function(t){var o,a,d,i=this;t.preventDefault(),this.avMode=s.SEARCH;var r=(this.countryCodeMapping[this.currentCountryCode]||this.currentCountryCode).split(";");if(this.currentCountryCode=r[0],r[1]&&(this.currentDataSet=r[1]),""===this.currentSearchTerm&&(this.hasSearchInputBeenReset=!0),this.searchType===e.AUTOCOMPLETE){if(t.target!==this.inputs[0])return;this.mustBe=(null===(o=this.inputs[1])||void 0===o?void 0:o.value)?this.inputs[1].value.split(/[,;\s]+/).map((function(e){return e.trim()})).filter(Boolean):this.mustBe,"blur"!==t.type&&"keyup"!==t.type&&"Enter"!==t.key||(this.mustNotBe=(null===(a=this.inputs[2])||void 0===a?void 0:a.value)?this.inputs[2].value.split(/[,;\s]+/).map((function(e){return e.trim()})).filter(Boolean):this.mustNotBe),this.exists=(null===(d=this.inputs[3])||void 0===d?void 0:d.value)?JSON.parse(this.inputs[3].value):this.exists}if(this.searchType!==e.AUTOCOMPLETE||"USA"!==this.currentCountryCode&&"CAN"!==this.currentCountryCode&&"AUS"!==this.currentCountryCode){var n=this.isInternationalValidation()?"|":",";this.currentSearchTerm=this.inputs.map((function(e){return e.value})).join(n)}else this.currentSearchTerm=this.inputs[0].value;if(this.canSearch()){this.request.currentRequest&&this.request.currentRequest.abort(),this.searchType==e.COMBINED&&this.readPredefinedFormats().find((function(e){e.format.test(i.currentSearchTerm.trim())&&(i.avMode=e.mode,i.currentSearchTerm=i.currentSearchTerm.trim())})),this.events.trigger("pre-search",this.currentSearchTerm),this.lastSearchTerm=this.currentSearchTerm,this.searchSpinner.hide(),this.searchSpinner.show();var l=void 0,c=void 0,u=void 0,p=void 0;if(this.searchType===e.LOOKUPV2){var C=this.currentSearchTerm.split(",");this.avMode=s[C[0].toUpperCase()],this.returnAddresses="true"===C[1],this.currentSearchTerm=C[C.length-1].trim()}switch(this.avMode){case s.WHAT3WORDS:p=this.generateLookupDataForApiCall(this.getWhat3WordsLookupValue(this.currentSearchTerm,!0),this.avMode),l=this.baseUrl+this.lookupV2Endpoint,c=[],u=this.picklist.showWhat3Words;break;case s.MPAN:case s.MPRN:this.returnAddresses=!0,p=this.generateLookupDataForApiCall(this.currentSearchTerm,this.avMode),l=this.baseUrl+this.lookupV2Endpoint,c=[{key:"Add-FinalAddress",value:!0}],u=this.result.handleUtilitiesLookupResponse;break;case s.UDPRN:case s.POSTAL_CODE:case s.LOCALITY:this.searchType===e.COMBINED&&(this.returnAddresses=!0),p=this.generateLookupDataForApiCall(this.currentSearchTerm,this.avMode),l=this.baseUrl+this.lookupV2Endpoint,c=[{key:"Add-Addresses",value:!0}],u=this.picklist.showLookup;break;default:p=this.generateSearchDataForApiCall(),l=this.baseUrl+(this.searchType===e.VALIDATE?this.validateEndpoint:this.searchEndpoint),c=this.searchType===e.VALIDATE?[{key:"Add-Components",value:!0},{key:"Add-Metadata",value:!0},{key:"Add-Enrichment",value:!0},{key:"Add-ExtraMatchInfo",value:!0}]:[],u=this.searchType===e.VALIDATE?this.result.handleValidateResponse:this.picklist.show}this.request.send(l,"POST",u,p,c)}else this.lastSearchTerm!==this.currentSearchTerm&&this.picklist.hide()},t.prototype.getKey=function(e){var s=e.key;switch(s){case"Down":case"ArrowDown":return"ArrowDown";case"Up":case"ArrowUp":return"ArrowUp";case"Spacebar":case" ":return" ";case"Escape":case"Esc":return"Escape";default:return s}},t.prototype.canSearch=function(){return this.options.enabled&&""!==this.currentSearchTerm&&this.currentSearchTerm.length>3&&this.lastSearchTerm!==this.currentSearchTerm&&this.currentCountryCode&&!0===this.hasSearchInputBeenReset},t.prototype.createPicklist=function(){var s=this;this.picklist=new C,this.picklist.maxSuggestions=25,this.picklist.tabCount=-1,this.picklist.show=function(t){var o;s.picklist.items=null==t?void 0:t.result.suggestions,s.picklist.handleCommonShowPicklistLogic(),(null===(o=s.picklist.items)||void 0===o?void 0:o.length)>0?(s.picklist.refine.isNeeded(t)&&s.picklist.refine.createInput(t.result.suggestions_prompt,t.result.suggestions_key),s.searchType===e.VALIDATE&&s.picklist.displaySuggestionsHeader(),s.picklist.items.forEach((function(e){var t=s.picklist.createListItem(e);s.picklist.list.appendChild(t),s.picklist.listen(t)})),s.searchType===e.VALIDATE&&s.picklist.displayUseAddressEnteredFooter(),s.picklist.scrollIntoViewIfNeeded()):s.picklist.handleEmptyPicklist(t),s.poweredByLogo.element=s.poweredByLogo.element||s.poweredByLogo.create(s.picklist),s.events.trigger("post-picklist-create",s.picklist.items)},this.picklist.showWhat3Words=function(e){var t;s.picklist.what3wordsItems=null==e?void 0:e.result.suggestions,s.picklist.handleCommonShowPicklistLogic(),(null===(t=s.picklist.what3wordsItems)||void 0===t?void 0:t.length)>0?(s.picklist.what3wordsItems.forEach((function(e){var t=s.picklist.createWhat3WordsListItem(e);s.picklist.list.appendChild(t),s.picklist.listen(t)})),s.picklist.scrollIntoViewIfNeeded()):s.picklist.handleEmptyPicklist(e),s.poweredByLogo.element=s.poweredByLogo.element||s.poweredByLogo.create(s.picklist),s.events.trigger("post-picklist-create",s.picklist.items)},this.picklist.showLookup=function(e){var t=0==(null==e?void 0:e.result.addresses.length)&&e.result.suggestions.length>0?null==e?void 0:e.result.suggestions:null==e?void 0:e.result.addresses,o=s.returnAddresses?t:null==e?void 0:e.result.suggestions;s.picklist.handleCommonShowPicklistLogic(),(null==o?void 0:o.length)>0?(o.forEach((function(t){var o=0==(null==e?void 0:e.result.addresses.length)&&e.result.suggestions.length>0?s.picklist.createLookupSuggestionListItem(t):s.picklist.createLookupListItem(t),a=s.returnAddresses?o:s.picklist.createLookupSuggestionListItem(t);s.picklist.list.appendChild(a),s.picklist.listen(a)})),s.picklist.scrollIntoViewIfNeeded()):s.picklist.handleEmptyPicklist(e),s.poweredByLogo.element=s.poweredByLogo.element||s.poweredByLogo.create(s.picklist),s.events.trigger("post-picklist-create",s.picklist.items)},this.picklist.handleCommonShowPicklistLogic=function(){var e;s.picklist.currentItem=null,s.picklist.size=null===(e=s.picklist.items)||void 0===e?void 0:e.length,s.picklist.resetTabCount(),s.searchSpinner.hide(),s.picklist.list=s.picklist.list||s.picklist.createList(),s.picklist.list.innerHTML="",s.picklist.useAddressEntered.destroy(),s.events.trigger("pre-picklist-create",s.picklist.items)},this.picklist.hide=function(){if(s.picklist.currentItem=null,s.picklist.useAddressEntered.destroy(),s.poweredByLogo.destroy(s.picklist),s.inputs){var t=s.searchType===e.SINGLELINE?s.inputs.length-1:0;s.inputs[t].classList.remove("showing-suggestions")}s.picklist.list&&(s.picklist.container.remove(),s.picklist.list=void 0)},this.picklist.handleEmptyPicklist=function(e){var t;s.picklist.useAddressEntered.element=s.picklist.useAddressEntered.element||s.picklist.useAddressEntered.create(null===(t=e.result)||void 0===t?void 0:t.confidence),s.picklist.scrollIntoViewIfNeeded(),"function"==typeof s.picklist.handleEmptyPicklistCallback&&s.picklist.handleEmptyPicklistCallback()},this.picklist.displaySuggestionsHeader=function(){var e=document.querySelector(".picklist-suggestions-header")||document.createElement("div");e.classList.add("picklist-suggestions-header"),e.innerText="Suggestions:",s.picklist.list.parentNode.insertBefore(e,s.picklist.list)},this.picklist.displayUseAddressEnteredFooter=function(){var e=document.querySelector(".picklist-use-entered-container")||document.createElement("div");e.classList.add("picklist-use-entered-container"),s.picklist.list.parentNode.insertBefore(e,s.picklist.list.nextElementSibling);var t=document.querySelector(".picklist-use-entered-header")||document.createElement("div");t.classList.add("picklist-use-entered-header"),t.innerText="Or use address entered:",e.appendChild(t);var o=document.querySelector(".picklist-use-entered-option")||document.createElement("div");o.classList.add("picklist-use-entered-option"),o.innerText=s.currentSearchTerm.replace(/,+/g,", "),o.addEventListener("click",s.picklist.useAddressEntered.click),e.appendChild(o)},this.picklist.scrollIntoViewIfNeeded=function(){var e=s.picklist.container.getBoundingClientRect().top<0,t=s.picklist.container.getBoundingClientRect().bottom>window.innerHeight;(e||t)&&s.picklist.container.scrollIntoView()},this.picklist.useAddressEntered={element:null,create:function(e){var t={text:"".concat(e," ").concat(s.options.useAddressEnteredText)},o=s.picklist.createListItem(t);return o.classList.add("use-address-entered"),o.setAttribute("title","Enter address manually"),s.picklist.list=s.picklist.list||s.picklist.createList(),s.picklist.list.parentNode.insertBefore(o,s.picklist.container.firstChild),o.addEventListener("click",s.picklist.useAddressEntered.click),o},destroy:function(){s.picklist.useAddressEntered.element&&(s.picklist.list.parentNode.removeChild(s.picklist.useAddressEntered.element),s.picklist.useAddressEntered.element=void 0)},click:function(){var e={result:{confidence:"No matches",address:{address_line_1:"",address_line_2:"",address_line_3:"",locality:"",region:"",postal_code:"",country:""}}};if(s.currentSearchTerm){var t=s.currentSearchTerm.split(",");t[0]&&(e.result.address.address_line_1=t[0]),t[1]&&(e.result.address.address_line_2=t[1]),t[2]&&(e.result.address.address_line_3=t[2]);for(var o=3;o<t.length;o++)e.result.address.address_line_3+=t[o]}s.result.show(e),s.result.updateHeading(s.options.formattedAddressContainer.manualHeadingText)},formatManualAddressLine:function(e,s){var t={};return t[l.addressLineLabels[s]]=e[s]||"",t}},this.picklist.createList=function(){var t=s.searchType===e.SINGLELINE||s.searchType===e.LOOKUPV2?s.inputs.length-1:0,o=document.createElement("div");o.classList.add("address-picklist-container"),s.picklist.container=o,s.inputs[t].parentNode.insertBefore(s.picklist.container,s.inputs[t].nextElementSibling);var a=document.createElement("div");return a.classList.add("address-picklist"),s.picklist.container.appendChild(a),s.currentDataSet[0]===s.abnDataset&&(s.inputs[1]||s.inputs[2]||s.inputs[3])&&(a.style.maxHeight="32px"),s.inputs[t].classList.add("showing-suggestions"),a.addEventListener("keydown",s.picklist.checkEnter),a},this.picklist.createListItem=function(e){var t=document.createElement("div");return t.innerHTML=s.picklist.addMatchingEmphasis(e),e.format?t.setAttribute("format",e.format):e.global_address_key&&t.setAttribute("refine",e.global_address_key),t},this.picklist.createWhat3WordsListItem=function(e){var s=document.createElement("div"),t=document.createElement("div"),o=document.createElement("div");return s.className="what3words",t.className="what3words-name",o.className="what3words-description",t.innerHTML="///"+e.what3words.name,o.innerHTML=e.what3words.description,s.appendChild(t),s.appendChild(o),s},this.picklist.createLookupListItem=function(e){var t=document.createElement("div");return t.innerHTML=s.picklist.addMatchingEmphasis(e),e.format?t.setAttribute("format",e.format):e.global_address_key&&t.setAttribute("refine",e.global_address_key),t},this.picklist.createLookupSuggestionListItem=function(e){var t,o,a=document.createElement("div"),d=e.locality,i=e.postal_code,r=d.town?d.town.name:"jpn"===s.currentCountryCode.toLowerCase()&&d.sub_region?d.sub_region.name:"",n=null!==(t=d.region.name)&&void 0!==t?t:d.region.code,l=null!==(o=i.full_name)&&void 0!==o?o:i.primary;return a.innerHTML=r+" "+n+" "+l,a.setAttribute("region_name",n),a.setAttribute("town_name",d.town?d.town.name:"jpn"===s.currentCountryCode.toLowerCase()&&d.sub_region?d.sub_region.name:""),a.setAttribute("postal_code_name",l),a.setAttribute("country",s.currentCountryCode),a.setAttribute("postal_code_key",e.postal_code_key),a.setAttribute("locality_key",e.locality_key),a},this.picklist.refine={element:null,isNeeded:function(t){return s.searchType!==e.AUTOCOMPLETE&&s.searchType!==e.COMBINED&&(t.result.confidence===d.PREMISES_PARTIAL||t.result.confidence===d.STREET_PARTIAL||t.result.confidence===d.MULTIPLE_MATCHES)},createInput:function(t,o){var a=document.querySelector(".picklist-refinement-box")||document.createElement("div");a.classList.add("picklist-refinement-box");var d=document.querySelector(".picklist-refinement-box input")||document.createElement("input");d.setAttribute("type","text"),d.setAttribute("placeholder",t),d.setAttribute("key",o),d.setAttribute(e.AUTOCOMPLETE,"new-password"),d.setAttribute(e.COMBINED,"new-password"),d.addEventListener("keydown",s.picklist.refine.enter.bind(s)),s.picklist.refine.element=d;var i=document.querySelector(".picklist-refinement-box button")||document.createElement("button");i.innerText="Refine",i.addEventListener("click",s.picklist.refine.enter),a.appendChild(d),a.appendChild(i),s.picklist.list.parentNode.insertBefore(a,s.picklist.list),d.focus()},enter:function(e){if(e instanceof KeyboardEvent&&"Enter"===e.key||e instanceof MouseEvent){if(e.preventDefault(),s.picklist.currentItem)return void s.picklist.checkEnter(e);if(e.stopPropagation(),s.picklist.refine.element.value){var t=JSON.stringify({refinement:s.picklist.refine.element.value}),o=s.picklist.refine.element.getAttribute("key");s.request.send("".concat(s.baseUrl).concat(s.refineEndpoint,"/").concat(o),"POST",s.result.handleValidateResponse,t)}}else s.picklist.size&&e instanceof KeyboardEvent&&("ArrowUp"===e.key||"ArrowDown"===e.key||"Enter"===e.key)&&s.picklist.keyup(e)}},this.picklist.resetTabCount=function(){s.picklist.tabCount=-1},this.picklist.keyup=function(e){if(s.picklist.list){s.picklist.checkEnter(e);var t,o,a=s.picklist.list.querySelectorAll("div");if(0!==a.length){"ArrowUp"===e.key?s.picklist.tabCount--:"ArrowDown"===e.key&&s.picklist.tabCount++,s.picklist.tabCount<0&&(s.picklist.tabCount=a.length-1,o=!0),s.picklist.tabCount>a.length-1&&(s.picklist.tabCount=0,t=!0);var d=a[s.picklist.tabCount],i=s.picklist.list.querySelector(".selected");i&&i.classList.remove("selected"),d.classList.add("selected"),s.picklist.currentItem=d;var r=s.picklist.list.offsetTop,n=s.picklist.list.offsetTop+s.picklist.list.offsetHeight,l=s.picklist.list.scrollTop,c=d.offsetTop,u=d.offsetTop+d.offsetHeight,p=d.offsetHeight;t?s.picklist.list.scrollTop=0:o?s.picklist.list.scrollTop=999:u+p>n?s.picklist.list.scrollTop=l+p:c-p-r<l&&(s.picklist.list.scrollTop=l-p)}}},this.picklist.addMatchingEmphasis=function(e){for(var s=e.matched||[],t=e.text,o=0;o<s.length;o++){var a="<b>"+t.substring(s[o][0],s[o][1])+"</b>";t=t.substring(0,s[o][0])+a+t.substring(s[o][1])}return t},this.picklist.listen=function(e){e.addEventListener("click",s.picklist.pick.bind(null,e))},this.picklist.checkEnter=function(e){if("Enter"===e.key||"Tab"===e.key){var t=void 0;1===s.picklist.size?t=s.picklist.list.querySelectorAll("div")[0]:s.picklist.currentItem&&(t=s.picklist.currentItem),t&&s.picklist.pick(t)}},this.picklist.pick=function(t){if(s.events.trigger("post-picklist-selection",t),t.classList.contains(i.WHAT3WORDS.key)){var o=t.getElementsByTagName("div");return s.returnAddresses=!0,void s.lookup(o[0].innerHTML)}e.LOOKUPV2!==s.searchType||s.returnAddresses?t.getAttribute("format")?Array.isArray(s.currentDataSet)&&s.currentDataSet.includes("gb-additional-electricity")||s.currentDataSet.includes("gb-additional-gas")?s.format(t.getAttribute("format"),"utilities"):s.format(t.getAttribute("format")):s.refine(t.getAttribute("refine")):s.formatLookupLocalityWithoutAddresses(t)}},t.prototype.formatLookupLocalityWithoutAddresses=function(e){this.result.updateAddressLine("locality",e.getAttribute("town_name"),"address-line-input"),this.result.updateAddressLine("region",e.getAttribute("region_name"),"address-line-input"),this.result.updateAddressLine("postal_code",e.getAttribute("postal_code_name"),"address-line-input"),this.result.updateAddressLine("country",e.getAttribute("country"),"address-line-input");var s=i.POSTAL_CODE.key===this.lookupType?"postal_code_key":"locality_key";this.result.createSearchAgainLink(),this.events.trigger("post-formatting-lookup",e.getAttribute(s),e)},t.prototype.format=function(e,s){this.events.trigger("pre-formatting-search",e),this.searchSpinner.hide();var t={layouts:s?[s]:["default"],layout_format:"default",attributes:this.getEnrichmentAttributes(e.split("/")[6])};this.request.send(e,"POST",this.result.show,JSON.stringify(t),[{key:"Add-Components",value:!0},{key:"Add-Metadata",value:!0},{key:"Add-Enrichment",value:!0}])},t.prototype.refine=function(e){this.events.trigger("pre-refinement",e),this.searchSpinner.hide(),this.request.send("".concat(this.baseUrl).concat(this.stepInEndpoint,"/").concat(e),"GET",this.picklist.show)},t.prototype.lookup=function(e){this.events.trigger("pre-lookup",e),this.searchSpinner.hide();var t=this.generateLookupDataForApiCall(e,s.WHAT3WORDS),o=this.baseUrl+this.lookupV2Endpoint,a=this.picklist.showLookup;this.request.send(o,"POST",a,t,[{key:"Add-Addresses",value:!0}])},t.prototype.populateFormatContainer=function(s){var t;this.result.formattedAddressContainer=this.options.elements.formattedAddressContainer,!this.result.formattedAddressContainer&&this.result.generateAddressLineRequired&&this.result.createFormattedAddressContainer(),this.componentsCollectionMap.clear();var o=s.result.components;if(o)for(var a=0;a<Object.keys(o).length;a++){var d=Object.keys(o)[a];this.componentsCollectionMap.set(d,o[d])}this.metadataCollectionMap.clear();var i=s.metadata;if(i)for(a=0;a<Object.keys(i).length;a++)d=Object.keys(i)[a],this.metadataCollectionMap.set(d,i[d]);this.matchInfoCollectionMap.clear();var r=null===(t=null==s?void 0:s.result)||void 0===t?void 0:t.match_info;if(r)for(a=0;a<Object.keys(r).length;a++)d=Object.keys(r)[a],this.matchInfoCollectionMap.set(d,r[d]);if(this.toggleSearchInputs("hide"),this.hasSearchInputBeenReset=!0,this.searchType===e.AUTOCOMPLETE)for(var n in this.options.elements)if(Object.prototype.hasOwnProperty.call(this.options.elements,n)&&"input"!==n&&this.options.elements[n]===this.inputs[0]){this.hasSearchInputBeenReset=!1;break}this.events.trigger("post-formatting-search",s)},t.prototype.populateResponseToMap=function(e,s,t,o){if(e)for(var a=function(e,a){if(!s.has(e))return"continue";var i=s.get(e);if(t&&t.has(e)){var r=t.get(e),n=Object.values(r).find((function(e){return e.id===a}));n&&d.tooltipDescriptionMap.set(i,n.title)}o.set(i,a)},d=this,i=0,r=e;i<r.length;i++){var n=r[i];a(n[0],n[1])}},t.prototype.extractNamesFromAddress=function(e){var s=[];return e.names&&e.names.forEach((function(e){var t=e.firstname+" "+e.middlename+" "+e.surname;s.push(t)})),s},t.prototype.populateForenamePicklist=function(e){var s=document.querySelector("input[name='Forename']"),t=document.querySelector("input[name='Middle Name']"),o=document.querySelector("input[name='Surname']"),a=document.createElement("div");a.classList.add("forename-picklist-container"),s&&s.parentNode&&s.parentNode.querySelectorAll(".forename-picklist-container").forEach((function(e){return e.remove()}));var d=document.createElement("div");d.classList.add("forename-picklist"),e.forEach((function(e){var i=e.replace(/\bundefined\b/g,""),r=document.createElement("div");r.classList.add("forename-picklist-item"),r.innerText=i,r.addEventListener("click",(function(){var e,d,r,n=i.split(" ");s.value=null!==(e=n[0])&&void 0!==e?e:"",t.value=null!==(d=n[1])&&void 0!==d?d:"",o.value=null!==(r=n[2])&&void 0!==r?r:"",a.remove()})),d.appendChild(r)})),a.appendChild(d),s.insertAdjacentElement("afterend",a)},t.prototype.checkTab=function(e){var s=this.getKey(e);"Tab"!==s?"Enter"===s&&e.preventDefault():this.picklist.keyup(e)},t.prototype.toggleSearchInputs=function(e){var s,t,o,a="show"===e?"remove":"add";null===(s=this.options.elements.inputs)||void 0===s||s.forEach((function(e){return e.parentNode.querySelectorAll(".toggle").forEach((function(e){return e.classList[a]("hidden")}))})),null===(t=this.options.elements.countryList)||void 0===t||t.parentNode.querySelectorAll(".toggle").forEach((function(e){return e.classList[a]("hidden")})),null===(o=this.options.elements.lookupButton)||void 0===o||o.parentNode.querySelectorAll(".toggle").forEach((function(e){return e.classList[a]("hidden")}))},t.prototype.globalReset=function(e){e&&e.preventDefault(),this.options.enabled=!0,this.result.hide(),this.hasSearchInputBeenReset=!0,this.inputs.forEach((function(e){return e.value=""})),this.picklist.hide(),this.toggleSearchInputs("show"),this.inputs[0].focus(),this.avMode=s.SEARCH,this.events.trigger("post-reset")},t.prototype.isInternationalValidation=function(){return!(this.searchType!==e.VALIDATE||1!=this.currentDataSet.length||!this.currentDataSet[0].toUpperCase().endsWith("-ED"))},t.prototype.generateLookupType=function(e){switch(e){case s.WHAT3WORDS:return i.WHAT3WORDS.key;case s.UDPRN:return i.UDPRN.key;case s.LOCALITY:return i.LOCALITY.key;case s.POSTAL_CODE:return i.POSTAL_CODE.key;case s.MPAN:return i.MPAN.key;case s.MPRN:return i.MPRN.key}},t}();window.AddressValidation=E}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,