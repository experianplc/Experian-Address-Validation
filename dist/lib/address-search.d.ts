import Request from './request';
import { AddressSearchOptions, AddressValidationMode, AddressValidationSearchType } from './search-options';
import { EnrichmentDetails, EnrichmentResponse } from './class-types';
export default class AddressValidation {
    options: AddressSearchOptions;
    searchType: AddressValidationSearchType;
    avMode: AddressValidationMode;
    events: any;
    request: Request;
    countryDropdown: {
        country: string;
        iso3Code: string;
        iso2Code: string;
        datasetCodes: string[];
        searchTypes: string[];
    }[];
    componentsCollectionMap: Map<string, string>;
    metadataCollectionMap: Map<string, string>;
    geocodes: EnrichmentDetails;
    cvHousehold: EnrichmentDetails;
    tooltipDescriptionMap: Map<string, string>;
    premiumLocationInsightMap: Map<string, string>;
    private baseUrl;
    private datasetsEndpoint;
    private searchEndpoint;
    private lookupV2Endpoint;
    private validateEndpoint;
    private promptsetEndpoint;
    private stepInEndpoint;
    private refineEndpoint;
    private enrichmentEndpoint;
    private picklist;
    private inputs;
    private lastSearchTerm;
    private currentSearchTerm;
    private lookupType;
    private returnAddresses;
    private currentCountryCode;
    private currentCountryName;
    private currentDataSet;
    private hasSearchInputBeenReset;
    private countryCodeMapping;
    private lookupFn;
    private keyUpFn;
    private checkTabFn;
    constructor(options: AddressSearchOptions);
    setToken(token: string): void;
    setSearchType(searchType: AddressValidationSearchType): void;
    getLookupEnrichmentData(key: string): void;
    getEnrichmentData(data: EnrichmentResponse): void;
    private getEnrichmentAttributes;
    private callEnrichment;
    private setup;
    private getParameter;
    private get token();
    private mergeDefaultOptions;
    private getPromptset;
    private lookupDatasetCodes;
    private lookupSearchTypes;
    private readPredefinedFormats;
    private handlePromptsetResult;
    setInputs(inputs?: HTMLInputElement[]): void;
    private registerInputs;
    private setCountryList;
    private handleDatasetsResponse;
    private handleCountryListChange;
    private generateSearchDataForApiCall;
    private generateLookupDataForApiCall;
    private getWhat3WordsLookupValue;
    private handleKeyboardEvent;
    private search;
    private getKey;
    private canSearch;
    private poweredByLogo;
    private createPicklist;
    private formatLookupLocalityWithoutAddresses;
    private format;
    private refine;
    private lookup;
    private result;
    private populateResponseToMap;
    private checkTab;
    private searchSpinner;
    private toggleSearchInputs;
    private globalReset;
    private isInternationalValidation;
    private generateLookupType;
}
